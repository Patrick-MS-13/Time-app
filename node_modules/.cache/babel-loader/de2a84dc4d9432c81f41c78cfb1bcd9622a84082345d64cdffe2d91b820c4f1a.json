{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\"); // Notification message\n  const [showAlarms, setShowAlarms] = useState(false); // Control visibility of form and alarms\n  const [selectedAlarms, setSelectedAlarms] = useState({}); // Track selected alarms for deletion\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = now => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n      const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n      if (alarmDate < now) {\n        alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n      }\n\n      // Check if the alarm should ring\n      if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n        // Alarm is ringing, disable it\n        setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n        return {\n          ...alarm,\n          isActive: false\n        }; // Turn off the alarm after it rings\n      }\n      return alarm; // Return unchanged if the alarm shouldn't ring yet\n    }));\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true\n      };\n      setAlarms(prev => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n  const calculateRemainingTime = alarm => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n  const toggleAlarm = id => {\n    setAlarms(prev => prev.map(alarm => {\n      if (alarm.id === id) {\n        const updatedAlarm = {\n          ...alarm,\n          isActive: !alarm.isActive\n        };\n        setAlarmMessage(updatedAlarm.isActive ? `Alarm re-enabled for ${updatedAlarm.time12}` : `Alarm disabled for ${updatedAlarm.time12}`);\n        return updatedAlarm;\n      }\n      return alarm; // Return unchanged if it's not the selected alarm\n    }));\n\n    // Clear the alarm message after 3 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n  const toggleCheckbox = id => {\n    setSelectedAlarms(prev => ({\n      ...prev,\n      [id]: !prev[id] // Toggle the selected state for the alarm\n    }));\n  };\n  const deleteSelectedAlarms = () => {\n    setAlarms(prev => prev.filter(alarm => !selectedAlarms[alarm.id])); // Delete selected alarms\n    setSelectedAlarms({}); // Clear selected alarms\n\n    setAlarmMessage(\"Deleted selected alarm(s).\");\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleDeleteClick = () => {\n    deleteSelectedAlarms();\n  };\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"glassy-title\",\n      children: \"Alarm Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: currentTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          hour12: true\n        }).split(\" \").map((part, index) => index === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ampm\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          justifyContent: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setShowAlarms(prev => !prev); // Toggle the visibility of alarms and form\n          },\n          style: {\n            cursor: \"pointer\",\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: alarm,\n            alt: \"Toggle Alarms\",\n            width: \"50\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleDeleteClick,\n          style: {\n            cursor: \"pointer\",\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Delete,\n            alt: \"Delete Selected Alarms\",\n            width: \"50\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), showAlarms && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: alarmTime,\n          onChange: e => setAlarmTime(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSetAlarm,\n          className: \"button\",\n          children: \"Set Alarm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), sortedAlarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alarm-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedAlarms.map(alarm => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"glassy-effect\",\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              margin: \"10px 0\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1,\n                textAlign: \"left\",\n                padding: \"0px 100px 0px 0px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"1.5em\",\n                  display: \"flex\",\n                  alignItems: \"baseline\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: alarm.time12.split(\" \")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"0.4em\",\n                    marginLeft: \"5px\"\n                  },\n                  children: alarm.time12.split(\" \")[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 25\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"0.6em\",\n                  marginTop: \"2px\"\n                },\n                children: alarm.isActive ? `Alarm in ${Math.floor(calculateRemainingTime(alarm) / (1000 * 60 * 60))}h ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60 * 60) / (1000 * 60))}m ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60) / 1000)}s` : \"Alarm Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"round-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedAlarms[alarm.id] || false,\n                  onChange: () => toggleCheckbox(alarm.id),\n                  style: {\n                    display: \"none\"\n                  } // Hide the default checkbox\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: alarm.isActive,\n                  onChange: () => toggleAlarm(alarm.id),\n                  style: {\n                    display: \"none\"\n                  } // Hide the default checkbox\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `slider ${alarm.isActive ? \"\" : \"round\"}`,\n                  style: {\n                    width: \"49px\",\n                    height: \"22px\"\n                  } // Adjust slider size\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this)]\n          }, alarm.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"0jBVWcBOjxwIDnda1Huv/WSA8R8=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","add","Delete","alarm","jsxDEV","_jsxDEV","Fragment","_Fragment","Alarm","_s","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","showAlarms","setShowAlarms","selectedAlarms","setSelectedAlarms","interval","setInterval","now","checkAlarms","clearInterval","prevAlarms","map","alarmHours","alarmMinutes","time24","split","Number","alarmDate","getFullYear","getMonth","getDate","setDate","getHours","getMinutes","isActive","time12","setTimeout","handleSetAlarm","newAlarm","formatAlarmTime","id","prev","time","hours","minutes","ampm","formattedHours","calculateRemainingTime","getTime","toggleAlarm","updatedAlarm","toggleCheckbox","deleteSelectedAlarms","filter","handleDeleteClick","sortedAlarms","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","hour","minute","second","hour12","part","index","style","display","gap","justifyContent","onClick","cursor","position","src","alt","width","height","type","value","onChange","e","target","length","alignItems","margin","flex","textAlign","padding","fontSize","marginLeft","marginTop","Math","floor","checked","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\"); // Notification message\n  const [showAlarms, setShowAlarms] = useState(false); // Control visibility of form and alarms\n  const [selectedAlarms, setSelectedAlarms] = useState({}); // Track selected alarms for deletion\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = (now) => {\n    setAlarms((prevAlarms) =>\n      prevAlarms.map((alarm) => {\n        const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n        const alarmDate = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate(),\n          alarmHours,\n          alarmMinutes\n        );\n\n        if (alarmDate < now) {\n          alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n        }\n\n        // Check if the alarm should ring\n        if (\n          now.getHours() === alarmHours &&\n          now.getMinutes() === alarmMinutes &&\n          alarm.isActive\n        ) {\n          // Alarm is ringing, disable it\n          setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n          return { ...alarm, isActive: false }; // Turn off the alarm after it rings\n        }\n\n        return alarm; // Return unchanged if the alarm shouldn't ring yet\n      })\n    );\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true,\n      };\n      setAlarms((prev) => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      \n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n\n  const calculateRemainingTime = (alarm) => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate(),\n      alarmHours,\n      alarmMinutes\n    );\n\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n\n  const toggleAlarm = (id) => {\n    setAlarms((prev) =>\n      prev.map((alarm) => {\n        if (alarm.id === id) {\n          const updatedAlarm = { ...alarm, isActive: !alarm.isActive };\n          setAlarmMessage(\n            updatedAlarm.isActive\n              ? `Alarm re-enabled for ${updatedAlarm.time12}`\n              : `Alarm disabled for ${updatedAlarm.time12}`\n          );\n          return updatedAlarm;\n        }\n        return alarm; // Return unchanged if it's not the selected alarm\n      })\n    );\n\n    // Clear the alarm message after 3 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n\n  const toggleCheckbox = (id) => {\n    setSelectedAlarms((prev) => ({\n      ...prev,\n      [id]: !prev[id], // Toggle the selected state for the alarm\n    }));\n  };\n\n  const deleteSelectedAlarms = () => {\n    setAlarms((prev) => prev.filter((alarm) => !selectedAlarms[alarm.id])); // Delete selected alarms\n    setSelectedAlarms({}); // Clear selected alarms\n\n    setAlarmMessage(\"Deleted selected alarm(s).\");\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleDeleteClick = () => {\n    deleteSelectedAlarms();\n  };\n\n  const sortedAlarms = [...alarms].sort(\n    (a, b) => calculateRemainingTime(a) - calculateRemainingTime(b)\n  );\n\n  return (\n    <div className=\"container\">\n      {alarmMessage && <div className=\"notification\">{alarmMessage}</div>}\n\n      <h2 className=\"glassy-title\">Alarm Clock</h2>\n\n      <div className=\"timeDisplay\">\n        <h4>\n          {currentTime\n            .toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              second: \"2-digit\",\n              hour12: true,\n            })\n            .split(\" \")\n            .map((part, index) =>\n              index === 1 ? (\n                <span key={index} className=\"ampm\">\n                  {part}\n                </span>\n              ) : (\n                <span key={index} className=\"time\">\n                  {part}\n                </span>\n              )\n            )}\n        </h4>\n        <div style={{ display: \"flex\", gap: \"10px\", justifyContent: \"center\" }}>\n          <div\n            onClick={() => {\n              setShowAlarms((prev) => !prev); // Toggle the visibility of alarms and form\n            }}\n            style={{ cursor: \"pointer\", position: \"relative\" }}\n          >\n            <img src={alarm} alt=\"Toggle Alarms\" width=\"50\" height=\"50\" />\n          </div>\n          <div\n            onClick={handleDeleteClick}\n            style={{ cursor: \"pointer\", position: \"relative\" }}\n          >\n            <img src={Delete} alt=\"Delete Selected Alarms\" width=\"50\" height=\"50\" />\n          </div>\n        </div>\n      </div>\n\n      {showAlarms && (\n        <>\n          <div className=\"button-container\">\n            <input\n              type=\"time\"\n              value={alarmTime}\n              onChange={(e) => setAlarmTime(e.target.value)}\n              className=\"input\"\n            />\n            <button onClick={handleSetAlarm} className=\"button\">\n              Set Alarm\n            </button>\n          </div>\n\n          {sortedAlarms.length > 0 && (\n            <div className=\"alarm-list\">\n              <ul>\n                {sortedAlarms.map((alarm) => (\n                  <li\n                    key={alarm.id}\n                    className=\"glassy-effect\"\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      margin: \"10px 0\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        padding: \"0px 100px 0px 0px\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          fontSize: \"1.5em\",\n                          display: \"flex\",\n                          alignItems: \"baseline\",\n                        }}\n                      >\n                        <span>{alarm.time12.split(\" \")[0]}</span>{\" \"}\n                        <span style={{ fontSize: \"0.4em\", marginLeft: \"5px\" }}>\n                          {alarm.time12.split(\" \")[1]}\n                        </span>{\" \"}\n                      </div>\n                      <div style={{ fontSize: \"0.6em\", marginTop: \"2px\" }}>\n                        {alarm.isActive\n                          ? `Alarm in ${Math.floor(\n                              calculateRemainingTime(alarm) / (1000 * 60 * 60)\n                            )}h ${Math.floor(\n                              (calculateRemainingTime(alarm) % (1000 * 60 * 60)) /\n                                (1000 * 60)\n                            )}m ${Math.floor(\n                              (calculateRemainingTime(alarm) % (1000 * 60)) / 1000\n                            )}s`\n                          : \"Alarm Disabled\"}\n                      </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      <label className=\"round-checkbox\">\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedAlarms[alarm.id] || false}\n                          onChange={() => toggleCheckbox(alarm.id)}\n                          style={{ display: \"none\" }} // Hide the default checkbox\n                        />\n                        <span className=\"checkmark\"></span>\n                      </label>\n                      <label className=\"switch\" style={{ marginLeft: \"10px\" }}>\n                        <input\n                          type=\"checkbox\"\n                          checked={alarm.isActive}\n                          onChange={() => toggleAlarm(alarm.id)}\n                          style={{ display: \"none\" }} // Hide the default checkbox\n                        />\n                        <span\n                          className={`slider ${alarm.isActive ? \"\" : \"round\"}`}\n                          style={{ width: \"49px\", height: \"22px\" }} // Adjust slider size\n                        ></span>\n                      </label>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}