{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [isSvgClicked, setIsSvgClicked] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = now => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n      const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n      if (alarmDate < now) {\n        alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n      }\n\n      // Check if the alarm should ring\n      if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n        // Alarm is ringing, disable it\n        setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n        return {\n          ...alarm,\n          isActive: false\n        }; // Turn off the alarm after it rings\n      }\n      return alarm; // Return unchanged if the alarm shouldn't ring yet\n    }));\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true\n      };\n      setAlarms(prev => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false);\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n  const calculateRemainingTime = alarm => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n    const diff = alarmDate.getTime() - now.getTime();\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n    const seconds = Math.floor(diff % (1000 * 60) / 1000);\n    return `Alarm in ${hours}h ${minutes}m ${seconds}s`;\n  };\n  const toggleAlarm = id => {\n    setAlarms(prev => prev.map(alarm => {\n      if (alarm.id === id) {\n        const newStatus = !alarm.isActive;\n        if (newStatus) {\n          setAlarmMessage(`Alarm for ${alarm.time12} reactivated!`);\n          setTimeout(() => {\n            setAlarmMessage(\"\");\n          }, 3000);\n        }\n        return {\n          ...alarm,\n          isActive: newStatus\n        };\n      }\n      return alarm;\n    }));\n  };\n  const handleSvgClick = () => {\n    setShowForm(true);\n    setIsSvgClicked(true);\n  };\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 24\n    }, this), !isSvgClicked && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alarm Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          hour12: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleSvgClick,\n        style: {\n          cursor: \"pointer\",\n          position: \"relative\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"50px\",\n          height: \"50px\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M11 8C11 7.44772 11.4477 7 12 7C12.5523 7 13 7.44772 13 8V11H16C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13H13V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V13H8C7.44771 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11H11V8Z\",\n            fill: \"#0F0F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            clipRule: \"evenodd\",\n            d: \"M23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12ZM3.00683 12C3.00683 16.9668 7.03321 20.9932 12 20.9932C16.9668 20.9932 20.9932 16.9668 20.9932 12C20.9932 7.03321 16.9668 3.00683 12 3.00683C7.03321 3.00683 3.00683 7.03321 3.00683 12Z\",\n            fill: \"#0F0F0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: alarmTime,\n          onChange: e => setAlarmTime(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSetAlarm,\n          className: \"button\",\n          children: \"Set Alarm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), sortedAlarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedAlarms.map(alarm => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"glassy-effect\",\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              margin: \"10px 0\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1,\n                textAlign: 'left',\n                padding: '0px 100px 0px 0px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"1.5em\",\n                  display: \"flex\",\n                  alignItems: \"baseline\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: alarm.time12.split(\" \")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 15\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"0.em\",\n                    marginLeft: \"5px\"\n                  },\n                  children: alarm.time12.split(\" \")[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 15\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"0.6em\",\n                  marginTop: \"2px\"\n                },\n                children: alarm.isActive ? calculateRemainingTime(alarm) : \"Alarm Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: alarm.isActive,\n                onChange: () => toggleAlarm(alarm.id),\n                style: {\n                  transform: \"scale(0.8)\"\n                } // Adjust slider size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `slider ${alarm.isActive ? \"\" : \"round\"}`,\n                style: {\n                  width: \"49px\",\n                  height: \"22px\"\n                } // Adjust slider size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 11\n            }, this)]\n          }, alarm.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"zdsq/gX9HUMZYUuipG1wDsfHuuY=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Alarm","_s","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","showForm","setShowForm","isSvgClicked","setIsSvgClicked","interval","setInterval","now","checkAlarms","clearInterval","prevAlarms","map","alarm","alarmHours","alarmMinutes","time24","split","Number","alarmDate","getFullYear","getMonth","getDate","setDate","getHours","getMinutes","isActive","time12","setTimeout","handleSetAlarm","newAlarm","formatAlarmTime","id","prev","time","hours","minutes","ampm","formattedHours","calculateRemainingTime","diff","getTime","Math","floor","seconds","toggleAlarm","newStatus","handleSvgClick","sortedAlarms","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","hour","minute","second","hour12","onClick","style","cursor","position","width","height","viewBox","fill","xmlns","d","fillRule","clipRule","type","value","onChange","e","target","length","display","justifyContent","alignItems","margin","flex","textAlign","padding","fontSize","marginLeft","marginTop","checked","transform","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [isSvgClicked, setIsSvgClicked] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = (now) => {\n    setAlarms((prevAlarms) =>\n      prevAlarms.map((alarm) => {\n        const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n        const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n\n        if (alarmDate < now) {\n          alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n        }\n\n        // Check if the alarm should ring\n        if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n          // Alarm is ringing, disable it\n          setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n          return { ...alarm, isActive: false }; // Turn off the alarm after it rings\n        }\n\n        return alarm; // Return unchanged if the alarm shouldn't ring yet\n      })\n    );\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true,\n      };\n      setAlarms((prev) => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false);\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n\n  const calculateRemainingTime = (alarm) => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n\n    const diff = alarmDate.getTime() - now.getTime();\n\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n    return `Alarm in ${hours}h ${minutes}m ${seconds}s`;\n  };\n\n  const toggleAlarm = (id) => {\n    setAlarms((prev) =>\n      prev.map((alarm) => {\n        if (alarm.id === id) {\n          const newStatus = !alarm.isActive;\n          if (newStatus) {\n            setAlarmMessage(`Alarm for ${alarm.time12} reactivated!`);\n            setTimeout(() => {\n              setAlarmMessage(\"\");\n            }, 3000);\n          }\n          return { ...alarm, isActive: newStatus };\n        }\n        return alarm;\n      })\n    );\n  };\n\n  const handleSvgClick = () => {\n    setShowForm(true);\n    setIsSvgClicked(true);\n  };\n\n  const sortedAlarms = [...alarms].sort(\n    (a, b) => calculateRemainingTime(a) - calculateRemainingTime(b)\n  );\n\n  return (\n    <div className=\"container\">\n      {alarmMessage && <div className=\"notification\">{alarmMessage}</div>}\n      {!isSvgClicked && <h2>Alarm Clock</h2>}\n      <div className=\"timeDisplay\">\n        <h3>\n          {currentTime.toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            second: \"2-digit\",\n            hour12: true,\n          })}\n        </h3>\n        <div onClick={handleSvgClick} style={{ cursor: \"pointer\", position: \"relative\" }}>\n          <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M11 8C11 7.44772 11.4477 7 12 7C12.5523 7 13 7.44772 13 8V11H16C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13H13V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V13H8C7.44771 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11H11V8Z\" fill=\"#0F0F0F\" />\n            <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12ZM3.00683 12C3.00683 16.9668 7.03321 20.9932 12 20.9932C16.9668 20.9932 20.9932 16.9668 20.9932 12C20.9932 7.03321 16.9668 3.00683 12 3.00683C7.03321 3.00683 3.00683 7.03321 3.00683 12Z\" fill=\"#0F0F0F\" />\n          </svg>\n        </div>\n        {showForm && (\n          <div>\n            <input\n              type=\"time\"\n              value={alarmTime}\n              onChange={(e) => setAlarmTime(e.target.value)}\n              className=\"input\"\n            />\n            <button onClick={handleSetAlarm} className=\"button\">Set Alarm</button>\n          </div>\n        )}\n{sortedAlarms.length > 0 && (\n  <div>\n    <ul>\n      {sortedAlarms.map((alarm) => (\n        <li\n          key={alarm.id}\n          className=\"glassy-effect\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            margin: \"10px 0\",\n          }}\n        >\n          <div style={{ flex: 1, textAlign: 'left', padding: '0px 100px 0px 0px'}}>\n            <div style={{ fontSize: \"1.5em\", display: \"flex\", alignItems: \"baseline\" }}>\n              <span>{alarm.time12.split(\" \")[0]}</span> {/* Time without AM/PM */}\n              <span style={{ fontSize: \"0.em\", marginLeft: \"5px\" }}>{alarm.time12.split(\" \")[1]}</span> {/* AM/PM */}\n            </div>\n            <div style={{ fontSize: \"0.6em\", marginTop: \"2px\" }}>\n              {alarm.isActive ? calculateRemainingTime(alarm) : \"Alarm Disabled\"}\n            </div>\n          </div>\n          <label className=\"switch\" style={{ marginLeft: \"10px\" }}>\n            <input\n              type=\"checkbox\"\n              checked={alarm.isActive}\n              onChange={() => toggleAlarm(alarm.id)}\n              style={{ transform: \"scale(0.8)\" }} // Adjust slider size\n            />\n            <span\n              className={`slider ${alarm.isActive ? \"\" : \"round\"}`}\n              style={{ width: \"49px\", height: \"22px\" }} // Adjust slider size\n            ></span>\n          </label>\n        </li>\n      ))}\n    </ul>\n  </div>\n)}\n\n\n      </div>\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}