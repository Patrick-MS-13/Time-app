{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/TimeZonePicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeZonePicker = () => {\n  _s();\n  const [timeZones, setTimeZones] = useState([]);\n  useEffect(() => {\n    // Function to get time zones using Intl API\n    const getTimeZones = () => {\n      try {\n        return Intl.supportedValuesOf('timeZone');\n      } catch (err) {\n        // Fallback list for older browsers\n        return ['America/New_York', 'Europe/London', 'Asia/Tokyo', 'Australia/Sydney', 'UTC'];\n      }\n    };\n\n    // Set the time zones state\n    setTimeZones(getTimeZones());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"timezone\",\n      children: \"Select Time Zone:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"timezone\",\n      children: timeZones.map((zone, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: zone,\n        children: zone\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeZonePicker, \"iSsVOxVHe+3LoL9bKo8YWXDGv+k=\");\n_c = TimeZonePicker;\nexport default TimeZonePicker;\nvar _c;\n$RefreshReg$(_c, \"TimeZonePicker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TimeZonePicker","_s","timeZones","setTimeZones","getTimeZones","Intl","supportedValuesOf","err","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","map","zone","index","value","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/TimeZonePicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TimeZonePicker = () => {\n  const [timeZones, setTimeZones] = useState([]);\n\n  useEffect(() => {\n    // Function to get time zones using Intl API\n    const getTimeZones = () => {\n      try {\n        return Intl.supportedValuesOf('timeZone');\n      } catch (err) {\n        // Fallback list for older browsers\n        return [\n          'America/New_York',\n          'Europe/London',\n          'Asia/Tokyo',\n          'Australia/Sydney',\n          'UTC',\n        ];\n      }\n    };\n\n    // Set the time zones state\n    setTimeZones(getTimeZones());\n  }, []);\n\n  return (\n    <div>\n      <label htmlFor=\"timezone\">Select Time Zone:</label>\n      <select id=\"timezone\">\n        {timeZones.map((zone, index) => (\n          <option key={index} value={zone}>\n            {zone}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default TimeZonePicker;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI;QACF,OAAOC,IAAI,CAACC,iBAAiB,CAAC,UAAU,CAAC;MAC3C,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZ;QACA,OAAO,CACL,kBAAkB,EAClB,eAAe,EACf,YAAY,EACZ,kBAAkB,EAClB,KAAK,CACN;MACH;IACF,CAAC;;IAED;IACAJ,YAAY,CAACC,YAAY,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAOU,OAAO,EAAC,UAAU;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACnDd,OAAA;MAAQe,EAAE,EAAC,UAAU;MAAAN,QAAA,EAClBN,SAAS,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBlB,OAAA;QAAoBmB,KAAK,EAAEF,IAAK;QAAAR,QAAA,EAC7BQ;MAAI,GADMC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CApCID,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAsCpB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}