{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/TimeZonePicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './../style/timezonePicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeZonePicker = () => {\n  _s();\n  const [timeZones, setTimeZones] = useState([]);\n  const [selectedTimeZone, setSelectedTimeZone] = useState('');\n  const [currentTime, setCurrentTime] = useState('');\n  useEffect(() => {\n    // Function to get time zones using Intl API\n    const getTimeZones = () => {\n      try {\n        return Intl.supportedValuesOf('timeZone');\n      } catch (err) {\n        // Fallback list for older browsers\n        return ['America/New_York', 'Europe/London', 'Asia/Tokyo', 'Australia/Sydney', 'UTC'];\n      }\n    };\n\n    // Set the time zones state\n    setTimeZones(getTimeZones());\n  }, []);\n  useEffect(() => {\n    // Function to update the current time based on the selected time zone\n    const updateTime = () => {\n      if (selectedTimeZone) {\n        const now = new Date();\n        const options = {\n          timeZone: selectedTimeZone,\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true\n        };\n        const formatter = new Intl.DateTimeFormat([], options);\n        setCurrentTime(formatter.format(now));\n      }\n    };\n\n    // Set an interval to update the time every second\n    const interval = setInterval(updateTime, 1000);\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(interval);\n  }, [selectedTimeZone]);\n\n  // Handle time zone selection\n  const handleTimeZoneChange = e => {\n    setSelectedTimeZone(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"timezone\",\n      children: \"Select Time Zone:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"timezone\",\n      onChange: handleTimeZoneChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a time zone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), timeZones.map((zone, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: zone,\n        children: zone\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), selectedTimeZone && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Time in \", selectedTimeZone, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeZonePicker, \"iqTX8V7D3TO/r0PwRb22xbF2ftg=\");\n_c = TimeZonePicker;\nexport default TimeZonePicker;\nvar _c;\n$RefreshReg$(_c, \"TimeZonePicker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TimeZonePicker","_s","timeZones","setTimeZones","selectedTimeZone","setSelectedTimeZone","currentTime","setCurrentTime","getTimeZones","Intl","supportedValuesOf","err","updateTime","now","Date","options","timeZone","hour","minute","second","hour12","formatter","DateTimeFormat","format","interval","setInterval","clearInterval","handleTimeZoneChange","e","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","zone","index","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/TimeZonePicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './../style/timezonePicker.css' \n\nconst TimeZonePicker = () => {\n  const [timeZones, setTimeZones] = useState([]);\n  const [selectedTimeZone, setSelectedTimeZone] = useState('');\n  const [currentTime, setCurrentTime] = useState('');\n\n  useEffect(() => {\n    // Function to get time zones using Intl API\n    const getTimeZones = () => {\n      try {\n        return Intl.supportedValuesOf('timeZone');\n      } catch (err) {\n        // Fallback list for older browsers\n        return [\n          'America/New_York',\n          'Europe/London',\n          'Asia/Tokyo',\n          'Australia/Sydney',\n          'UTC',\n        ];\n      }\n    };\n\n    // Set the time zones state\n    setTimeZones(getTimeZones());\n  }, []);\n\n  useEffect(() => {\n    // Function to update the current time based on the selected time zone\n    const updateTime = () => {\n      if (selectedTimeZone) {\n        const now = new Date();\n        const options = {\n          timeZone: selectedTimeZone,\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true,\n        };\n\n        const formatter = new Intl.DateTimeFormat([], options);\n        setCurrentTime(formatter.format(now));\n      }\n    };\n\n    // Set an interval to update the time every second\n    const interval = setInterval(updateTime, 1000);\n\n    // Cleanup the interval on component unmount\n    return () => clearInterval(interval);\n  }, [selectedTimeZone]);\n\n  // Handle time zone selection\n  const handleTimeZoneChange = (e) => {\n    setSelectedTimeZone(e.target.value);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"timezone\">Select Time Zone:</label>\n      <select id=\"timezone\" onChange={handleTimeZoneChange}>\n        <option value=\"\">Select a time zone</option>\n        {timeZones.map((zone, index) => (\n          <option key={index} value={zone}>\n            {zone}\n          </option>\n        ))}\n      </select>\n\n      {selectedTimeZone && (\n        <div>\n          <h3>Current Time in {selectedTimeZone}:</h3>\n          <p>{currentTime}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimeZonePicker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}