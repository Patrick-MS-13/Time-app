{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\"); // Notification message\n  const [showForm, setShowForm] = useState(false); // Control visibility of form\n  const [showCheckboxes, setShowCheckboxes] = useState(false); // Control checkbox display\n  const [selectedAlarms, setSelectedAlarms] = useState({}); // Track selected alarms for deletion\n  const [showDeleteButton, setShowDeleteButton] = useState(false); // New state for delete button visibility\n  const [hideTitle, setHideTitle] = useState(false); // New state to hide the title permanently\n  const [showAlarms, setShowAlarms] = useState(false); // New state to control alarm section visibility\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = now => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n      const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n      if (alarmDate < now) {\n        alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n      }\n\n      // Check if the alarm should ring\n      if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n        // Alarm is ringing, disable it\n        setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n        return {\n          ...alarm,\n          isActive: false\n        }; // Turn off the alarm after it rings\n      }\n      return alarm; // Return unchanged if the alarm shouldn't ring yet\n    }));\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true\n      };\n      setAlarms(prev => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false); // Hide form after setting the alarm\n      setShowDeleteButton(true); // Show the delete button when an alarm is set\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n  const calculateRemainingTime = alarm => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n  const toggleAlarm = id => {\n    setAlarms(prev => prev.map(alarm => {\n      if (alarm.id === id) {\n        const updatedAlarm = {\n          ...alarm,\n          isActive: !alarm.isActive\n        };\n        setAlarmMessage(updatedAlarm.isActive ? `Alarm re-enabled for ${updatedAlarm.time12}` : `Alarm disabled for ${updatedAlarm.time12}`);\n        return updatedAlarm;\n      }\n      return alarm; // Return unchanged if it's not the selected alarm\n    }));\n\n    // Clear the alarm message after 3 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n  const toggleCheckbox = id => {\n    setSelectedAlarms(prev => ({\n      ...prev,\n      [id]: !prev[id] // Toggle the selected state for the alarm\n    }));\n  };\n  const deleteSelectedAlarms = () => {\n    const deletedAlarms = alarms.filter(alarm => selectedAlarms[alarm.id]);\n    setAlarms(prev => prev.filter(alarm => !selectedAlarms[alarm.id])); // Delete selected alarms\n    setSelectedAlarms({}); // Clear selected alarms\n    setShowCheckboxes(false); // Hide checkboxes\n\n    if (deletedAlarms.length > 0) {\n      setAlarmMessage(`Deleted ${deletedAlarms.length} selected alarm(s).`);\n    } else {\n      setAlarmMessage(\"No alarms were selected for deletion.\");\n    }\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleDeleteClick = () => {\n    if (alarms.length === 0) {\n      setAlarmMessage(\"No alarms were set for deletion.\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else if (showCheckboxes) {\n      deleteSelectedAlarms();\n    } else {\n      setShowCheckboxes(true);\n    }\n  };\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 24\n    }, this), !hideTitle && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"glassy-title\",\n      children: \"Alarm Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: currentTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          second: \"2-digit\",\n          hour12: true\n        }).split(\" \").map((part, index) => index === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ampm\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          justifyContent: showDeleteButton ? \"space-between\" : \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setShowAlarms(prev => !prev); // Toggle the form visibility\n            setShowDeleteButton(false);\n            setHideTitle(true); // Hide title permanently until page refresh\n          },\n          style: {\n            cursor: \"pointer\",\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: alarm,\n            alt: \"Alarm Icon\",\n            width: \"50\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), showDeleteButton && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleDeleteClick,\n          style: {\n            cursor: \"pointer\",\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Delete,\n            alt: \"Delete Selected Alarms\",\n            width: \"50\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), showAlarms && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: alarmTime,\n          onChange: e => setAlarmTime(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSetAlarm,\n          className: \"button\",\n          children: \"Set Alarm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }, this), sortedAlarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alarm-list\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: sortedAlarms.map(alarm => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"glassy-effect\",\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              margin: \"10px 0\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                flex: 1,\n                textAlign: \"left\",\n                padding: \"0px 100px 0px 0px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"1.5em\",\n                  display: \"flex\",\n                  alignItems: \"baseline\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: alarm.time12.split(\" \")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 25\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"0.4em\",\n                    marginLeft: \"5px\"\n                  },\n                  children: alarm.time12.split(\" \")[1]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: \"0.6em\",\n                  marginTop: \"2px\"\n                },\n                children: alarm.isActive ? `Alarm in ${Math.floor(calculateRemainingTime(alarm) / (1000 * 60 * 60))}h ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60 * 60) / (1000 * 60))}m ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60) / 1000)}s` : \"Alarm Disabled\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: \"flex\",\n                alignItems: \"center\"\n              },\n              children: showCheckboxes ? /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"round-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: selectedAlarms[alarm.id] || false,\n                  onChange: () => toggleCheckbox(alarm.id),\n                  style: {\n                    display: \"none\"\n                  } // Hide the default checkbox\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"checkmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"switch\",\n                style: {\n                  marginLeft: \"10px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: alarm.isActive,\n                  onChange: () => toggleAlarm(alarm.id),\n                  style: {\n                    display: \"none\"\n                  } // Hide the default checkbox\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `slider ${alarm.isActive ? \"\" : \"round\"}`,\n                  style: {\n                    width: \"49px\",\n                    height: \"22px\"\n                  } // Adjust slider size\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 21\n            }, this)]\n          }, alarm.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"caafgEed1cvBc3sh7rZ0j05iEVE=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","add","Delete","alarm","jsxDEV","_jsxDEV","Fragment","_Fragment","Alarm","_s","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","showForm","setShowForm","showCheckboxes","setShowCheckboxes","selectedAlarms","setSelectedAlarms","showDeleteButton","setShowDeleteButton","hideTitle","setHideTitle","showAlarms","setShowAlarms","interval","setInterval","now","checkAlarms","clearInterval","prevAlarms","map","alarmHours","alarmMinutes","time24","split","Number","alarmDate","getFullYear","getMonth","getDate","setDate","getHours","getMinutes","isActive","time12","setTimeout","handleSetAlarm","newAlarm","formatAlarmTime","id","prev","time","hours","minutes","ampm","formattedHours","calculateRemainingTime","getTime","toggleAlarm","updatedAlarm","toggleCheckbox","deleteSelectedAlarms","deletedAlarms","filter","length","handleDeleteClick","sortedAlarms","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","hour","minute","second","hour12","part","index","style","display","gap","justifyContent","onClick","cursor","position","src","alt","width","height","type","value","onChange","e","target","alignItems","margin","flex","textAlign","padding","fontSize","marginLeft","marginTop","Math","floor","checked","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\"); // Notification message\n  const [showForm, setShowForm] = useState(false); // Control visibility of form\n  const [showCheckboxes, setShowCheckboxes] = useState(false); // Control checkbox display\n  const [selectedAlarms, setSelectedAlarms] = useState({}); // Track selected alarms for deletion\n  const [showDeleteButton, setShowDeleteButton] = useState(false); // New state for delete button visibility\n  const [hideTitle, setHideTitle] = useState(false); // New state to hide the title permanently\n  const [showAlarms, setShowAlarms] = useState(false); // New state to control alarm section visibility\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = (now) => {\n    setAlarms((prevAlarms) =>\n      prevAlarms.map((alarm) => {\n        const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n        const alarmDate = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate(),\n          alarmHours,\n          alarmMinutes\n        );\n\n        if (alarmDate < now) {\n          alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n        }\n\n        // Check if the alarm should ring\n        if (\n          now.getHours() === alarmHours &&\n          now.getMinutes() === alarmMinutes &&\n          alarm.isActive\n        ) {\n          // Alarm is ringing, disable it\n          setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n          return { ...alarm, isActive: false }; // Turn off the alarm after it rings\n        }\n\n        return alarm; // Return unchanged if the alarm shouldn't ring yet\n      })\n    );\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true,\n      };\n      setAlarms((prev) => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false); // Hide form after setting the alarm\n      setShowDeleteButton(true); // Show the delete button when an alarm is set\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n\n  const calculateRemainingTime = (alarm) => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate(),\n      alarmHours,\n      alarmMinutes\n    );\n\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n\n  const toggleAlarm = (id) => {\n    setAlarms((prev) =>\n      prev.map((alarm) => {\n        if (alarm.id === id) {\n          const updatedAlarm = { ...alarm, isActive: !alarm.isActive };\n          setAlarmMessage(\n            updatedAlarm.isActive\n              ? `Alarm re-enabled for ${updatedAlarm.time12}`\n              : `Alarm disabled for ${updatedAlarm.time12}`\n          );\n          return updatedAlarm;\n        }\n        return alarm; // Return unchanged if it's not the selected alarm\n      })\n    );\n\n    // Clear the alarm message after 3 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n\n  const toggleCheckbox = (id) => {\n    setSelectedAlarms((prev) => ({\n      ...prev,\n      [id]: !prev[id], // Toggle the selected state for the alarm\n    }));\n  };\n\n  const deleteSelectedAlarms = () => {\n    const deletedAlarms = alarms.filter((alarm) => selectedAlarms[alarm.id]);\n    setAlarms((prev) => prev.filter((alarm) => !selectedAlarms[alarm.id])); // Delete selected alarms\n    setSelectedAlarms({}); // Clear selected alarms\n    setShowCheckboxes(false); // Hide checkboxes\n\n    if (deletedAlarms.length > 0) {\n      setAlarmMessage(`Deleted ${deletedAlarms.length} selected alarm(s).`);\n    } else {\n      setAlarmMessage(\"No alarms were selected for deletion.\");\n    }\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleDeleteClick = () => {\n    if (alarms.length === 0) {\n      setAlarmMessage(\"No alarms were set for deletion.\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else if (showCheckboxes) {\n      deleteSelectedAlarms();\n    } else {\n      setShowCheckboxes(true);\n    }\n  };\n\n  const sortedAlarms = [...alarms].sort(\n    (a, b) => calculateRemainingTime(a) - calculateRemainingTime(b)\n  );\n\n  return (\n    <div className=\"container\">\n      {alarmMessage && <div className=\"notification\">{alarmMessage}</div>}\n\n      {!hideTitle && <h2 className=\"glassy-title\">Alarm Clock</h2>}\n\n      {/* Display the current time */}\n      <div className=\"timeDisplay\">\n        <h4>\n          {currentTime\n            .toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\",\n              second: \"2-digit\",\n              hour12: true,\n            })\n            .split(\" \")\n            .map((part, index) =>\n              index === 1 ? (\n                <span key={index} className=\"ampm\">\n                  {part}\n                </span>\n              ) : (\n                <span key={index} className=\"time\">\n                  {part}\n                </span>\n              )\n            )}\n        </h4>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n            justifyContent: showDeleteButton ? \"space-between\" : \"center\",\n          }}\n        >\n          <div\n            onClick={() => {\n              setShowAlarms((prev) => !prev); // Toggle the form visibility\n              setShowDeleteButton(false);\n              setHideTitle(true); // Hide title permanently until page refresh\n            }}\n            style={{ cursor: \"pointer\", position: \"relative\" }}\n          >\n            <img src={alarm} alt=\"Alarm Icon\" width=\"50\" height=\"50\" />\n          </div>\n          {showDeleteButton && (\n            <div\n              onClick={handleDeleteClick}\n              style={{ cursor: \"pointer\", position: \"relative\" }}\n            >\n              <img\n                src={Delete}\n                alt=\"Delete Selected Alarms\"\n                width=\"50\"\n                height=\"50\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Show form and alarms only if showAlarms is true */}\n      {showAlarms && (\n        <>\n          {showForm && (\n            <div className=\"button-container\">\n              <input\n                type=\"time\"\n                value={alarmTime}\n                onChange={(e) => setAlarmTime(e.target.value)}\n                className=\"input\"\n              />\n              <button onClick={handleSetAlarm} className=\"button\">\n                Set Alarm\n              </button>\n            </div>\n          )}\n\n          {sortedAlarms.length > 0 && (\n            <div className=\"alarm-list\">\n              <ul>\n                {sortedAlarms.map((alarm) => (\n                  <li\n                    key={alarm.id}\n                    className=\"glassy-effect\"\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      margin: \"10px 0\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        padding: \"0px 100px 0px 0px\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          fontSize: \"1.5em\",\n                          display: \"flex\",\n                          alignItems: \"baseline\",\n                        }}\n                      >\n                        <span>{alarm.time12.split(\" \")[0]}</span>{\" \"}\n                        <span style={{ fontSize: \"0.4em\", marginLeft: \"5px\" }}>\n                          {alarm.time12.split(\" \")[1]}\n                        </span>{\" \"}\n                      </div>\n                      <div style={{ fontSize: \"0.6em\", marginTop: \"2px\" }}>\n                        {alarm.isActive\n                          ? `Alarm in ${Math.floor(\n                              calculateRemainingTime(alarm) / (1000 * 60 * 60)\n                            )}h ${Math.floor(\n                              (calculateRemainingTime(alarm) % (1000 * 60 * 60)) /\n                                (1000 * 60)\n                            )}m ${Math.floor(\n                              (calculateRemainingTime(alarm) % (1000 * 60)) / 1000\n                            )}s`\n                          : \"Alarm Disabled\"}\n                      </div>\n                    </div>\n                    <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                      {showCheckboxes ? (\n                        <label className=\"round-checkbox\">\n                          <input\n                            type=\"checkbox\"\n                            checked={selectedAlarms[alarm.id] || false}\n                            onChange={() => toggleCheckbox(alarm.id)}\n                            style={{ display: \"none\" }} // Hide the default checkbox\n                          />\n                          <span className=\"checkmark\"></span>\n                        </label>\n                      ) : (\n                        <label className=\"switch\" style={{ marginLeft: \"10px\" }}>\n                          <input\n                            type=\"checkbox\"\n                            checked={alarm.isActive}\n                            onChange={() => toggleAlarm(alarm.id)}\n                            style={{ display: \"none\" }} // Hide the default checkbox\n                          />\n                          <span\n                            className={`slider ${alarm.isActive ? \"\" : \"round\"}`}\n                            style={{ width: \"49px\", height: \"22px\" }} // Adjust slider size\n                          ></span>\n                        </label>\n                      )}\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}