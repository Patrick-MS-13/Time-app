{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component-1/ToDoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './../component-1/style/todolist.css'; // Add your styles here\nimport edit from './icons/'; // Adjust the path based on your folder structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const [task, setTask] = useState(''); // To store the current input task\n  const [tasks, setTasks] = useState([]); // To store the list of tasks\n\n  // Add a new task to the list\n  const addTask = () => {\n    if (task.trim() === '') return; // Avoid adding empty tasks\n    setTasks([...tasks, {\n      text: task,\n      isCompleted: false\n    }]);\n    setTask(''); // Clear the input field after adding\n  };\n\n  // Mark a task as completed\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].isCompleted = !newTasks[index].isCompleted;\n    setTasks(newTasks);\n  };\n\n  // Remove a task from the list\n  const removeTask = index => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a task...\",\n        value: task,\n        onChange: e => setTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: [/*#__PURE__*/_jsxDEV(\"edit\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \" \", \"Add Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.isCompleted ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => completeTask(index),\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTask(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ToDoList, \"5mGQg7guAs5rSlbJvLoFnwVpbYU=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","edit","jsxDEV","_jsxDEV","ToDoList","_s","task","setTask","tasks","setTasks","addTask","trim","text","isCompleted","completeTask","index","newTasks","removeTask","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component-1/ToDoList.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './../component-1/style/todolist.css'; // Add your styles here\nimport edit from './icons/'; // Adjust the path based on your folder structure\n\nfunction ToDoList() {\n  const [task, setTask] = useState(''); // To store the current input task\n  const [tasks, setTasks] = useState([]); // To store the list of tasks\n\n  // Add a new task to the list\n  const addTask = () => {\n    if (task.trim() === '') return; // Avoid adding empty tasks\n    setTasks([...tasks, { text: task, isCompleted: false }]);\n    setTask(''); // Clear the input field after adding\n  };\n\n  // Mark a task as completed\n  const completeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].isCompleted = !newTasks[index].isCompleted;\n    setTasks(newTasks);\n  };\n\n  // Remove a task from the list\n  const removeTask = (index) => {\n    const newTasks = tasks.filter((_, i) => i !== index);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <h1>To-Do List</h1>\n      <div className=\"input-section\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a task...\"\n          value={task}\n          onChange={(e) => setTask(e.target.value)}\n        />\n        <button onClick={addTask}>\n          <edit /> {/* The icon is displayed next to the button text */}\n          Add Task\n        </button>\n      </div>\n\n      <ul className=\"task-list\">\n        {tasks.map((task, index) => (\n          <li key={index} className={task.isCompleted ? 'completed' : ''}>\n            <span onClick={() => completeTask(index)}>{task.text}</span>\n            <button onClick={() => removeTask(index)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}