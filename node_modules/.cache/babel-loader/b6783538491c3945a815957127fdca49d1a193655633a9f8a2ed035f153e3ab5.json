{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from './../img/add.svg'; // Import your new SVG\nimport Delete from './../img/delete.svg'; // Import your delete SVG\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [isSvgClicked, setIsSvgClicked] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = now => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n      const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n      if (alarmDate < now) {\n        alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n      }\n\n      // Check if the alarm should ring\n      if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n        // Alarm is ringing, disable it\n        setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n        return {\n          ...alarm,\n          isActive: false\n        }; // Turn off the alarm after it rings\n      }\n      return alarm; // Return unchanged if the alarm shouldn't ring yet\n    }));\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true\n      };\n      setAlarms(prev => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false);\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n  const calculateRemainingTime = alarm => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n  const toggleAlarm = id => {\n    setAlarms(prev => prev.map(alarm => {\n      if (alarm.id === id) {\n        if (alarm.isActive) {\n          setAlarmMessage(`Alarm for ${alarm.time12} has been deactivated.`);\n        } else {\n          setAlarmMessage(`Alarm for ${alarm.time12} has been reactivated.`);\n        }\n        return {\n          ...alarm,\n          isActive: !alarm.isActive\n        }; // Toggle the alarm's active state\n      }\n      return alarm; // Return unchanged if it's not the selected alarm\n    }));\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const deleteAlarm = id => {\n    setAlarms(prev => prev.filter(alarm => alarm.id !== id));\n    setAlarmMessage(`Alarm has been deleted.`);\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const deleteAllAlarms = () => {\n    setAlarms([]);\n    setAlarmMessage(`All alarms have been deleted.`);\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleSvgClick = () => {\n    setShowForm(true);\n    setIsSvgClicked(true);\n  };\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 24\n    }, this), !isSvgClicked && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alarm Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: currentTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: true\n        }).split(\" \").map((part, index) => index === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ampm\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this) // Apply the ampm class to the AM/PM text\n        : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"time\",\n          children: part\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this) // Default span for the time\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleSvgClick,\n          style: {\n            cursor: \"pointer\",\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: add,\n            alt: \"Add Alarm\",\n            width: \"50\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: deleteAllAlarms,\n          style: {\n            cursor: \"pointer\",\n            position: \"relative\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Delete,\n            alt: \"Delete All Alarms\",\n            width: \"50\",\n            height: \"50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: alarmTime,\n        onChange: e => setAlarmTime(e.target.value),\n        className: \"input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetAlarm,\n        className: \"button\",\n        children: \"Set Alarm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this), sortedAlarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alarm-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sortedAlarms.map(alarm => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"glassy-effect\",\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            margin: \"10px 0\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              textAlign: \"left\",\n              padding: \"0px 100px 0px 0px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"1.5em\",\n                display: \"flex\",\n                alignItems: \"baseline\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: alarm.time12.split(\" \")[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: \"0.4em\",\n                  marginLeft: \"5px\"\n                },\n                children: alarm.time12.split(\" \")[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: \"0.6em\",\n                marginTop: \"2px\"\n              },\n              children: alarm.isActive ? `Alarm in ${Math.floor(calculateRemainingTime(alarm) / (1000 * 60 * 60))}h ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60 * 60) / (1000 * 60))}m ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60) / 1000)}s` : \"Alarm Disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              style: {\n                marginLeft: \"10px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: alarm.isActive,\n                onChange: () => toggleAlarm(alarm.id),\n                style: {\n                  transform: \"scale(0.8)\"\n                } // Adjust slider size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `slider ${alarm.isActive ? \"\" : \"round\"}`,\n                style: {\n                  width: \"49px\",\n                  height: \"22px\"\n                } // Adjust slider size\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => deleteAlarm(alarm.id),\n              style: {\n                cursor: 'pointer',\n                marginLeft: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Delete,\n                alt: \"Delete Alarm\",\n                width: \"20\",\n                height: \"20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)]\n        }, alarm.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"zdsq/gX9HUMZYUuipG1wDsfHuuY=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","add","Delete","jsxDEV","_jsxDEV","Alarm","_s","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","showForm","setShowForm","isSvgClicked","setIsSvgClicked","interval","setInterval","now","checkAlarms","clearInterval","prevAlarms","map","alarm","alarmHours","alarmMinutes","time24","split","Number","alarmDate","getFullYear","getMonth","getDate","setDate","getHours","getMinutes","isActive","time12","setTimeout","handleSetAlarm","newAlarm","formatAlarmTime","id","prev","time","hours","minutes","ampm","formattedHours","calculateRemainingTime","getTime","toggleAlarm","deleteAlarm","filter","deleteAllAlarms","handleSvgClick","sortedAlarms","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","hour","minute","hour12","part","index","style","display","gap","onClick","cursor","position","src","alt","width","height","type","value","onChange","e","target","length","justifyContent","alignItems","margin","flex","textAlign","padding","fontSize","marginLeft","marginTop","Math","floor","checked","transform","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from './../img/add.svg'; // Import your new SVG\nimport Delete from './../img/delete.svg'; // Import your delete SVG\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [isSvgClicked, setIsSvgClicked] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = (now) => {\n    setAlarms((prevAlarms) =>\n      prevAlarms.map((alarm) => {\n        const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n        const alarmDate = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate(),\n          alarmHours,\n          alarmMinutes\n        );\n\n        if (alarmDate < now) {\n          alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n        }\n\n        // Check if the alarm should ring\n        if (\n          now.getHours() === alarmHours &&\n          now.getMinutes() === alarmMinutes &&\n          alarm.isActive\n        ) {\n          // Alarm is ringing, disable it\n          setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n          return { ...alarm, isActive: false }; // Turn off the alarm after it rings\n        }\n\n        return alarm; // Return unchanged if the alarm shouldn't ring yet\n      })\n    );\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true,\n      };\n      setAlarms((prev) => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false);\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n\n  const calculateRemainingTime = (alarm) => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate(),\n      alarmHours,\n      alarmMinutes\n    );\n\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n\n  const toggleAlarm = (id) => {\n    setAlarms((prev) => \n      prev.map((alarm) => {\n        if (alarm.id === id) {\n          if (alarm.isActive) {\n            setAlarmMessage(`Alarm for ${alarm.time12} has been deactivated.`);\n          } else {\n            setAlarmMessage(`Alarm for ${alarm.time12} has been reactivated.`);\n          }\n          return { ...alarm, isActive: !alarm.isActive }; // Toggle the alarm's active state\n        }\n        return alarm; // Return unchanged if it's not the selected alarm\n      })\n    );\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const deleteAlarm = (id) => {\n    setAlarms((prev) => prev.filter(alarm => alarm.id !== id));\n    setAlarmMessage(`Alarm has been deleted.`);\n    \n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const deleteAllAlarms = () => {\n    setAlarms([]);\n    setAlarmMessage(`All alarms have been deleted.`);\n    \n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleSvgClick = () => {\n    setShowForm(true);\n    setIsSvgClicked(true);\n  };\n\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n\n  return (\n    <div className=\"container\">\n      {alarmMessage && <div className=\"notification\">{alarmMessage}</div>}\n      {!isSvgClicked && <h2>Alarm Clock</h2>}\n      <div className=\"timeDisplay\">\n        <h4>\n          {currentTime.toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true,\n          }).split(\" \").map((part, index) => (\n            index === 1 ? (\n              <span key={index} className=\"ampm\">{part}</span> // Apply the ampm class to the AM/PM text\n            ) : (\n              <span key={index} className=\"time\">{part}</span> // Default span for the time\n            )\n          ))}\n        </h4>\n        <div style={{ display: 'flex', gap: '10px' }}>\n          <div\n            onClick={handleSvgClick}\n            style={{ cursor: \"pointer\", position: \"relative\" }}\n          >\n            <img src={add} alt=\"Add Alarm\" width=\"50\" height=\"50\" />\n          </div>\n          <div\n            onClick={deleteAllAlarms}\n            style={{ cursor: \"pointer\", position: \"relative\" }}\n          >\n            <img src={Delete} alt=\"Delete All Alarms\" width=\"50\" height=\"50\" />\n          </div>\n        </div>\n      </div>\n      {showForm && (\n        <div>\n          <input\n            type=\"time\"\n            value={alarmTime}\n            onChange={(e) => setAlarmTime(e.target.value)}\n            className=\"input\"\n          />\n          <button onClick={handleSetAlarm} className=\"button\">\n            Set Alarm\n          </button>\n        </div>\n      )}\n      {sortedAlarms.length > 0 && (\n        <div className=\"alarm-list\">\n          <ul>\n            {sortedAlarms.map((alarm) => (\n              <li\n                key={alarm.id}\n                className=\"glassy-effect\"\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                  margin: \"10px 0\",\n                }}\n              >\n                <div\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    padding: \"0px 100px 0px 0px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      fontSize: \"1.5em\",\n                      display: \"flex\",\n                      alignItems: \"baseline\",\n                    }}\n                  >\n                    <span>{alarm.time12.split(\" \")[0]}</span>{\" \"}\n                    <span style={{ fontSize: \"0.4em\", marginLeft: \"5px\" }}>\n                      {alarm.time12.split(\" \")[1]}\n                    </span>{\" \"}\n                  </div>\n                  <div style={{ fontSize: \"0.6em\", marginTop: \"2px\" }}>\n                    {alarm.isActive\n                      ? `Alarm in ${Math.floor(calculateRemainingTime(alarm) / (1000 * 60 * 60))}h ${Math.floor((calculateRemainingTime(alarm) % (1000 * 60 * 60)) / (1000 * 60))}m ${Math.floor((calculateRemainingTime(alarm) % (1000 * 60)) / 1000)}s`\n                      : \"Alarm Disabled\"}\n                  </div>\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <label className=\"switch\" style={{ marginLeft: \"10px\" }}>\n                    <input\n                      type=\"checkbox\"\n                      checked={alarm.isActive}\n                      onChange={() => toggleAlarm(alarm.id)}\n                      style={{ transform: \"scale(0.8)\" }} // Adjust slider size\n                    />\n                    <span\n                      className={`slider ${alarm.isActive ? \"\" : \"round\"}`}\n                      style={{ width: \"49px\", height: \"22px\" }} // Adjust slider size\n                    ></span>\n                  </label>\n                  <div onClick={() => deleteAlarm(alarm.id)} style={{ cursor: 'pointer', marginLeft: '10px' }}>\n                    <img src={Delete} alt=\"Delete Alarm\" width=\"20\" height=\"20\" />\n                  </div>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}