{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Time-Management/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [showCheckboxes, setShowCheckboxes] = useState(false);\n  const [selectedAlarms, setSelectedAlarms] = useState({});\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\n  const [showAlarmClock, setShowAlarmClock] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [alarms]);\n  const checkAlarms = now => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n      const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n      if (alarmDate < now) {\n        alarmDate.setDate(alarmDate.getDate() + 1);\n      }\n      if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n        setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n        return {\n          ...alarm,\n          isActive: false\n        };\n      }\n      return alarm;\n    }));\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true\n      };\n      setAlarms(prev => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false);\n      setShowDeleteButton(true);\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n  const calculateRemainingTime = alarm => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n    return alarmDate.getTime() - now.getTime();\n  };\n  const toggleAlarm = id => {\n    setAlarms(prev => prev.map(alarm => {\n      if (alarm.id === id) {\n        const updatedAlarm = {\n          ...alarm,\n          isActive: !alarm.isActive\n        };\n        setAlarmMessage(updatedAlarm.isActive ? `Alarm re-enabled for ${updatedAlarm.time12}` : `Alarm disabled for ${updatedAlarm.time12}`);\n        return updatedAlarm;\n      }\n      return alarm;\n    }));\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n  const toggleCheckbox = id => {\n    setSelectedAlarms(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const deleteSelectedAlarms = () => {\n    const deletedAlarms = alarms.filter(alarm => selectedAlarms[alarm.id]);\n    setAlarms(prev => prev.filter(alarm => !selectedAlarms[alarm.id]));\n    setSelectedAlarms({});\n    setShowCheckboxes(false);\n    setAlarmMessage(deletedAlarms.length > 0 ? `Deleted ${deletedAlarms.length} selected alarm(s).` : \"No alarms were selected for deletion.\");\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleDeleteClick = () => {\n    if (alarms.length === 0) {\n      setAlarmMessage(\"No alarms were set for deletion.\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else if (showCheckboxes) {\n      deleteSelectedAlarms();\n    } else {\n      setShowCheckboxes(true);\n    }\n  };\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: showAlarmClock && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: currentTime.toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            second: \"2-digit\",\n            hour12: true\n          }).split(\" \").map((part, index) => index === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ampm\",\n            children: part\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: part\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 82\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\",\n            justifyContent: showForm || showDeleteButton && alarms.length > 0 ? \"space-between\" : \"center\"\n          },\n          children: [!showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setShowForm(prev => !prev);\n              setShowDeleteButton(false);\n            },\n            style: {\n              cursor: \"pointer\",\n              position: \"relative\"\n            },\n            title: \"Add Alarm\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: add,\n              alt: \"Add Alarm\",\n              width: \"50\",\n              height: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this), showDeleteButton && alarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleDeleteClick,\n            style: {\n              cursor: \"pointer\",\n              position: \"relative\"\n            },\n            title: \"Delete Selected Alarms\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Delete,\n              alt: \"Delete Selected Alarms\",\n              width: \"50\",\n              height: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: alarmTime,\n            onChange: e => setAlarmTime(e.target.value),\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSetAlarm,\n            className: \"button\",\n            style: {\n              width: \"175px\",\n              height: \"46px\",\n              margin: \"20px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-around\"\n            },\n            children: \"Set Alarm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), sortedAlarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alarm-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: \"0\",\n          padding: \"0\",\n          color: \"#000\",\n          textAlign: \"center\"\n        },\n        children: \"Alarms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), sortedAlarms.map(alarm => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alarm-item\",\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          padding: \"10px\",\n          borderBottom: \"1px solid #ccc\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alarm-time\",\n          children: alarm.time12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"alarm-status\",\n          style: {\n            color: alarm.isActive ? \"green\" : \"red\"\n          },\n          children: alarm.isActive ? \"Active\" : \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            cursor: \"pointer\"\n          },\n          onClick: () => toggleAlarm(alarm.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: alarm,\n            alt: \"Toggle Alarm\",\n            width: \"30\",\n            height: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), showCheckboxes && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedAlarms[alarm.id] || false,\n          onChange: () => toggleCheckbox(alarm.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, alarm.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"4d6EvxX2KT5NCARFJxwFkF5SdA4=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","add","Delete","alarm","jsxDEV","_jsxDEV","Fragment","_Fragment","Alarm","_s","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","showForm","setShowForm","showCheckboxes","setShowCheckboxes","selectedAlarms","setSelectedAlarms","showDeleteButton","setShowDeleteButton","showAlarmClock","setShowAlarmClock","interval","setInterval","now","checkAlarms","clearInterval","prevAlarms","map","alarmHours","alarmMinutes","time24","split","Number","alarmDate","getFullYear","getMonth","getDate","setDate","getHours","getMinutes","isActive","time12","setTimeout","handleSetAlarm","newAlarm","formatAlarmTime","id","prev","time","hours","minutes","ampm","formattedHours","calculateRemainingTime","getTime","toggleAlarm","updatedAlarm","toggleCheckbox","deleteSelectedAlarms","deletedAlarms","filter","length","handleDeleteClick","sortedAlarms","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","hour","minute","second","hour12","part","index","style","display","gap","justifyContent","onClick","cursor","position","title","src","alt","width","height","type","value","onChange","e","target","margin","alignItems","padding","color","textAlign","borderBottom","checked","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Time-Management/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [showCheckboxes, setShowCheckboxes] = useState(false);\n  const [selectedAlarms, setSelectedAlarms] = useState({});\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\n  const [showAlarmClock, setShowAlarmClock] = useState(false);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now);\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [alarms]);\n\n  const checkAlarms = (now) => {\n    setAlarms((prevAlarms) =>\n      prevAlarms.map((alarm) => {\n        const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n        const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n        if (alarmDate < now) {\n          alarmDate.setDate(alarmDate.getDate() + 1);\n        }\n\n        if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n          setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n          return { ...alarm, isActive: false };\n        }\n\n        return alarm;\n      })\n    );\n\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true,\n      };\n      setAlarms((prev) => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false);\n      setShowDeleteButton(true);\n\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n\n  const calculateRemainingTime = (alarm) => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n    return alarmDate.getTime() - now.getTime();\n  };\n\n  const toggleAlarm = (id) => {\n    setAlarms((prev) =>\n      prev.map((alarm) => {\n        if (alarm.id === id) {\n          const updatedAlarm = { ...alarm, isActive: !alarm.isActive };\n          setAlarmMessage(updatedAlarm.isActive ? `Alarm re-enabled for ${updatedAlarm.time12}` : `Alarm disabled for ${updatedAlarm.time12}`);\n          return updatedAlarm;\n        }\n        return alarm;\n      })\n    );\n\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n\n  const toggleCheckbox = (id) => {\n    setSelectedAlarms((prev) => ({\n      ...prev,\n      [id]: !prev[id],\n    }));\n  };\n\n  const deleteSelectedAlarms = () => {\n    const deletedAlarms = alarms.filter((alarm) => selectedAlarms[alarm.id]);\n    setAlarms((prev) => prev.filter((alarm) => !selectedAlarms[alarm.id]));\n    setSelectedAlarms({});\n    setShowCheckboxes(false);\n\n    setAlarmMessage(deletedAlarms.length > 0 ? `Deleted ${deletedAlarms.length} selected alarm(s).` : \"No alarms were selected for deletion.\");\n\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleDeleteClick = () => {\n    if (alarms.length === 0) {\n      setAlarmMessage(\"No alarms were set for deletion.\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else if (showCheckboxes) {\n      deleteSelectedAlarms();\n    } else {\n      setShowCheckboxes(true);\n    }\n  };\n\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n\n  return (\n    <div className=\"container\">\n      {alarmMessage && <div className=\"notification\">{alarmMessage}</div>}\n\n      <div className=\"timeDisplay\">\n        {showAlarmClock && (\n          <>\n            <h4>\n              {currentTime.toLocaleTimeString([], {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n                second: \"2-digit\",\n                hour12: true,\n              }).split(\" \").map((part, index) =>\n                index === 1 ? <span key={index} className=\"ampm\">{part}</span> : <span key={index} className=\"time\">{part}</span>\n              )}\n            </h4>\n            <div style={{ display: \"flex\", gap: \"10px\", justifyContent: showForm || (showDeleteButton && alarms.length > 0) ? \"space-between\" : \"center\" }}>\n              {!showForm && (\n                <div onClick={() => { setShowForm((prev) => !prev); setShowDeleteButton(false); }} style={{ cursor: \"pointer\", position: \"relative\" }} title=\"Add Alarm\">\n                  <img src={add} alt=\"Add Alarm\" width=\"50\" height=\"50\" />\n                </div>\n              )}\n              {showDeleteButton && alarms.length > 0 && (\n                <div onClick={handleDeleteClick} style={{ cursor: \"pointer\", position: \"relative\" }} title=\"Delete Selected Alarms\">\n                  <img src={Delete} alt=\"Delete Selected Alarms\" width=\"50\" height=\"50\" />\n                </div>\n              )}\n            </div>\n            {showForm && (\n              <div className=\"button-container\">\n                <input type=\"time\" value={alarmTime} onChange={(e) => setAlarmTime(e.target.value)} className=\"input\" />\n                <button onClick={handleSetAlarm} className=\"button\" style={{ width: \"175px\", height: \"46px\", margin: \"20px\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-around\" }}>\n                  Set Alarm\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n\n      {sortedAlarms.length > 0 && (\n        <div className=\"alarm-list\">\n          <h2 style={{ margin: \"0\", padding: \"0\", color: \"#000\", textAlign: \"center\" }}>Alarms</h2>\n          {sortedAlarms.map((alarm) => (\n            <div key={alarm.id} className=\"alarm-item\" style={{ display: \"flex\", justifyContent: \"space-between\", padding: \"10px\", borderBottom: \"1px solid #ccc\" }}>\n              <span className=\"alarm-time\">{alarm.time12}</span>\n              <span className=\"alarm-status\" style={{ color: alarm.isActive ? \"green\" : \"red\" }}>{alarm.isActive ? \"Active\" : \"Inactive\"}</span>\n              <div style={{ cursor: \"pointer\" }} onClick={() => toggleAlarm(alarm.id)}>\n                <img src={alarm} alt=\"Toggle Alarm\" width=\"30\" height=\"30\" />\n              </div>\n              {showCheckboxes && (\n                <input type=\"checkbox\" checked={selectedAlarms[alarm.id] || false} onChange={() => toggleCheckbox(alarm.id)} />\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}