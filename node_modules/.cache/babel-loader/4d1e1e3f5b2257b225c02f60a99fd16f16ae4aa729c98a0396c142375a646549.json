{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/TimeZonePicker.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n// import './../style/timezonepicker.css'; // Uncomment this if you have custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeZonePicker = () => {\n  _s();\n  const [timeZones, setTimeZones] = useState([]);\n  const [selectedTimeZone, setSelectedTimeZone] = useState('UTC'); // Default to UTC\n  const [currentTime, setCurrentTime] = useState('');\n  useEffect(() => {\n    const getTimeZones = () => {\n      try {\n        return Intl.supportedValuesOf('timeZone');\n      } catch (err) {\n        console.error(\"Error retrieving time zones: \", err);\n        return ['America/New_York', 'Europe/London', 'Asia/Tokyo', 'Australia/Sydney', 'UTC'];\n      }\n    };\n    const zones = getTimeZones().map(zone => ({\n      value: zone,\n      label: zone\n    }));\n    setTimeZones(zones);\n  }, []);\n  useEffect(() => {\n    const updateTime = () => {\n      if (selectedTimeZone) {\n        const now = new Date();\n        const options = {\n          timeZone: selectedTimeZone,\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true\n        };\n        const formatter = new Intl.DateTimeFormat([], options);\n        setCurrentTime(formatter.format(now));\n      }\n    };\n    const interval = setInterval(updateTime, 1000);\n    updateTime(); // Call immediately to set initial time\n    return () => clearInterval(interval);\n  }, [selectedTimeZone]);\n  const handleTimeZoneChange = selectedOption => {\n    if (selectedOption) {\n      setSelectedTimeZone(selectedOption.value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"timezone\",\n      children: \"Select Time Zone:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      id: \"timezone\",\n      options: timeZones,\n      onChange: handleTimeZoneChange,\n      placeholder: \"Search and select a time zone\",\n      defaultValue: timeZones.find(zone => zone.value === selectedTimeZone) // Default selection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), selectedTimeZone && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Time in \", selectedTimeZone, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeZonePicker, \"LsNZ8JboLKC5R7MUJ+RajSoAIYo=\");\n_c = TimeZonePicker;\nexport default TimeZonePicker;\nvar _c;\n$RefreshReg$(_c, \"TimeZonePicker\");","map":{"version":3,"names":["React","useState","useEffect","Select","jsxDEV","_jsxDEV","TimeZonePicker","_s","timeZones","setTimeZones","selectedTimeZone","setSelectedTimeZone","currentTime","setCurrentTime","getTimeZones","Intl","supportedValuesOf","err","console","error","zones","map","zone","value","label","updateTime","now","Date","options","timeZone","hour","minute","second","hour12","formatter","DateTimeFormat","format","interval","setInterval","clearInterval","handleTimeZoneChange","selectedOption","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","placeholder","defaultValue","find","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/TimeZonePicker.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\n// import './../style/timezonepicker.css'; // Uncomment this if you have custom styles\n\nconst TimeZonePicker = () => {\n  const [timeZones, setTimeZones] = useState([]);\n  const [selectedTimeZone, setSelectedTimeZone] = useState('UTC'); // Default to UTC\n  const [currentTime, setCurrentTime] = useState('');\n\n  useEffect(() => {\n    const getTimeZones = () => {\n      try {\n        return Intl.supportedValuesOf('timeZone');\n      } catch (err) {\n        console.error(\"Error retrieving time zones: \", err);\n        return [\n          'America/New_York',\n          'Europe/London',\n          'Asia/Tokyo',\n          'Australia/Sydney',\n          'UTC',\n        ];\n      }\n    };\n\n    const zones = getTimeZones().map((zone) => ({\n      value: zone,\n      label: zone,\n    }));\n    setTimeZones(zones);\n  }, []);\n\n  useEffect(() => {\n    const updateTime = () => {\n      if (selectedTimeZone) {\n        const now = new Date();\n        const options = {\n          timeZone: selectedTimeZone,\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true,\n        };\n        const formatter = new Intl.DateTimeFormat([], options);\n        setCurrentTime(formatter.format(now));\n      }\n    };\n\n    const interval = setInterval(updateTime, 1000);\n    updateTime(); // Call immediately to set initial time\n    return () => clearInterval(interval);\n  }, [selectedTimeZone]);\n\n  const handleTimeZoneChange = (selectedOption) => {\n    if (selectedOption) {\n      setSelectedTimeZone(selectedOption.value);\n    }\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"timezone\">Select Time Zone:</label>\n      <Select\n        id=\"timezone\"\n        options={timeZones}\n        onChange={handleTimeZoneChange}\n        placeholder=\"Search and select a time zone\"\n        defaultValue={timeZones.find(zone => zone.value === selectedTimeZone)} // Default selection\n      />\n      {selectedTimeZone && (\n        <div>\n          <h3>Current Time in {selectedTimeZone}:</h3>\n          <p>{currentTime}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TimeZonePicker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}