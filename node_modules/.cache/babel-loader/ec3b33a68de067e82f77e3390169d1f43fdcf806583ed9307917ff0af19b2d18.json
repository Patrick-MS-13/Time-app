{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './../style/alarm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  const [alarmTime, setAlarmTime] = useState('');\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState('');\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    checkAlarms();\n  }, [currentTime, alarms]);\n  const checkAlarms = () => {\n    const formattedCurrentTime = currentTime.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: true // Use 12-hour format\n    });\n    alarms.forEach(alarm => {\n      if (formattedCurrentTime === alarm.time) {\n        alert(`Alarm ringing for ${alarm.time}!`);\n        setAlarms(prev => prev.filter(a => a.time !== alarm.time)); // Remove ringing alarm\n      }\n    });\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time: formatAlarmTime(alarmTime),\n        id: Date.now()\n      }; // Create a new alarm object\n      setAlarms(prev => [...prev, newAlarm]); // Add the new alarm to the list\n      setAlarmMessage(`Alarm set for ${newAlarm.time}`);\n      setAlarmTime(''); // Clear input after setting alarm\n\n      // Clear the alarm message after 1 second\n      setTimeout(() => {\n        setAlarmMessage('');\n      }, 1000);\n    } else {\n      setAlarmMessage('Please enter a valid time');\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(':');\n    const date = new Date();\n    date.setHours(hours);\n    date.setMinutes(minutes);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true // Use 12-hour format\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alarm Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"time\",\n      value: alarmTime,\n      onChange: e => setAlarmTime(e.target.value),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSetAlarm,\n      className: \"button\",\n      children: \"Set Alarm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Current Time: \", currentTime.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), alarms.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Alarms Set:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: alarms.map(alarm => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: alarm.time\n          }, alarm.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No alarms set.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), alarmMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"message\",\n        children: alarmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"70RMYFjCNhB6dUPXAw7K1aGcQB8=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Alarm","_s","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","interval","setInterval","clearInterval","checkAlarms","formattedCurrentTime","toLocaleTimeString","hour","minute","second","hour12","forEach","alarm","time","alert","prev","filter","a","handleSetAlarm","newAlarm","formatAlarmTime","id","now","setTimeout","hours","minutes","split","date","setHours","setMinutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","length","map","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './../style/alarm.css';\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState('');\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState('');\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    checkAlarms();\n  }, [currentTime, alarms]);\n\n  const checkAlarms = () => {\n    const formattedCurrentTime = currentTime.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: true, // Use 12-hour format\n    });\n\n    alarms.forEach((alarm) => {\n      if (formattedCurrentTime === alarm.time) {\n        alert(`Alarm ringing for ${alarm.time}!`);\n        setAlarms((prev) => prev.filter(a => a.time !== alarm.time)); // Remove ringing alarm\n      }\n    });\n  };\n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = { time: formatAlarmTime(alarmTime), id: Date.now() }; // Create a new alarm object\n      setAlarms((prev) => [...prev, newAlarm]); // Add the new alarm to the list\n      setAlarmMessage(`Alarm set for ${newAlarm.time}`);\n      setAlarmTime(''); // Clear input after setting alarm\n\n      // Clear the alarm message after 1 second\n      setTimeout(() => {\n        setAlarmMessage('');\n      }, 1000);\n    } else {\n      setAlarmMessage('Please enter a valid time');\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(':');\n    const date = new Date();\n    date.setHours(hours);\n    date.setMinutes(minutes);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true, // Use 12-hour format\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>Alarm Clock</h2>\n      <input\n        type=\"time\"\n        value={alarmTime}\n        onChange={(e) => setAlarmTime(e.target.value)}\n        className=\"input\"\n      />\n      <button onClick={handleSetAlarm} className=\"button\">\n        Set Alarm\n      </button>\n      <div className=\"timeDisplay\">\n        <h3>Current Time: {currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true })}</h3>\n        {alarms.length > 0 ? (\n          <div>\n            <h4>Alarms Set:</h4>\n            <ul>\n              {alarms.map((alarm) => (\n                <li key={alarm.id}>\n                  {alarm.time}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <h4>No alarms set.</h4>\n        )}\n        {alarmMessage && <p className=\"message\">{alarmMessage}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}