{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './../style/alarm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  const [alarmTime, setAlarmTime] = useState('');\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState('');\n  const [isAlarmRinging, setIsAlarmRinging] = useState(false);\n  const [showForm, setShowForm] = useState(false); // Toggle visibility of the form\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n      checkAlarms(); // Check alarms every second\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = () => {\n    const formattedCurrentTime = currentTime.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n    alarms.forEach(alarm => {\n      if (formattedCurrentTime === alarm.time && alarm.isActive && !isAlarmRinging) {\n        setIsAlarmRinging(true);\n        setAlarmMessage(`Alarm ringing for ${alarm.time}!`);\n        // Automatically toggle off the alarm after it rings\n        setAlarms(prev => prev.map(a => a.id === alarm.id ? {\n          ...a,\n          isActive: false\n        } : a));\n\n        // Clear the alarm message after 5 seconds\n        setTimeout(() => {\n          setAlarmMessage('');\n          setIsAlarmRinging(false);\n        }, 5000);\n      }\n    });\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true\n      };\n      setAlarms(prev => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time}`);\n      setAlarmTime('');\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage('');\n      }, 3000);\n\n      // Hide the form after setting the alarm\n      setShowForm(false);\n    } else {\n      setAlarmMessage('Please enter a valid time');\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(':');\n    const date = new Date();\n    date.setHours(hours);\n    date.setMinutes(minutes);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const calculateRemainingTime = alarm => {\n    const [alarmHours, alarmMinutes] = alarm.time.split(':').map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate <= now) {\n      alarmDate.setDate(alarmDate.getDate() + 1); // Set for next day if the time has passed\n    }\n    const diff = alarmDate.getTime() - now.getTime();\n    if (diff < 0) {\n      return \"Alarm time is invalid\"; // Check if the difference is negative\n    }\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n    const seconds = Math.floor(diff % (1000 * 60) / 1000);\n    return `Alarm in ${hours}h ${minutes}m ${seconds}s`; // Format the remaining time\n  };\n  const toggleAlarm = id => {\n    setAlarms(prev => prev.map(alarm => alarm.id === id ? {\n      ...alarm,\n      isActive: !alarm.isActive\n    } : alarm));\n  };\n\n  // Handle the click on the SVG to show the form\n  const handleSvgClick = () => {\n    setShowForm(true); // Show the form every time the SVG is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Alarm Clock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentTime.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit',\n          second: '2-digit',\n          hour12: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: handleSvgClick,\n        style: {\n          cursor: 'pointer'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"50px\",\n          height: \"50px\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"g\", {\n            id: \"SVGRepo_bgCarrier\",\n            \"stroke-width\": \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            id: \"SVGRepo_tracerCarrier\",\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            id: \"SVGRepo_iconCarrier\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M11 8C11 7.44772 11.4477 7 12 7C12.5523 7 13 7.44772 13 8V11H16C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13H13V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V13H8C7.44771 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11H11V8Z\",\n              fill: \"#0F0F0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              \"fill-rule\": \"evenodd\",\n              \"clip-rule\": \"evenodd\",\n              d: \"M23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12ZM3.00683 12C3.00683 16.9668 7.03321 20.9932 12 20.9932C16.9668 20.9932 20.9932 16.9668 20.9932 12C20.9932 7.03321 16.9668 3.00683 12 3.00683C7.03321 3.00683 3.00683 7.03321 3.00683 12Z\",\n              fill: \"#0F0F0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: alarmTime,\n          onChange: e => setAlarmTime(e.target.value),\n          className: \"input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSetAlarm,\n          className: \"button\",\n          children: \"Set Alarm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), alarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Alarms Set:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: alarms.map(alarm => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [alarm.time, \" - \", alarm.isActive ? calculateRemainingTime(alarm) : 'Alarm Disabled', /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"switch\",\n              style: {\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: alarm.isActive,\n                onChange: () => toggleAlarm(alarm.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `slider ${alarm.isActive ? '' : 'round'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)]\n          }, alarm.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"VvQVLJjzevfN6H8AFqpB8pAqVzE=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Alarm","_s","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","isAlarmRinging","setIsAlarmRinging","showForm","setShowForm","interval","setInterval","checkAlarms","clearInterval","formattedCurrentTime","toLocaleTimeString","hour","minute","hour12","forEach","alarm","time","isActive","prev","map","a","id","setTimeout","handleSetAlarm","newAlarm","formatAlarmTime","now","hours","minutes","split","date","setHours","setMinutes","calculateRemainingTime","alarmHours","alarmMinutes","Number","alarmDate","getFullYear","getMonth","getDate","setDate","diff","getTime","Math","floor","seconds","toggleAlarm","handleSvgClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","second","onClick","style","cursor","width","height","viewBox","fill","xmlns","d","type","value","onChange","e","target","length","marginLeft","checked","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Project/mini-project/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './../style/alarm.css';\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState('');\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState('');\n  const [isAlarmRinging, setIsAlarmRinging] = useState(false);\n  const [showForm, setShowForm] = useState(false); // Toggle visibility of the form\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(new Date());\n      checkAlarms(); // Check alarms every second\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [alarms]); // Only depend on alarms\n\n  const checkAlarms = () => {\n    const formattedCurrentTime = currentTime.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n    });\n\n    alarms.forEach((alarm) => {\n      if (formattedCurrentTime === alarm.time && alarm.isActive && !isAlarmRinging) {\n        setIsAlarmRinging(true);\n        setAlarmMessage(`Alarm ringing for ${alarm.time}!`);\n        // Automatically toggle off the alarm after it rings\n        setAlarms((prev) =>\n          prev.map((a) => (a.id === alarm.id ? { ...a, isActive: false } : a))\n        );\n\n        // Clear the alarm message after 5 seconds\n        setTimeout(() => {\n          setAlarmMessage('');\n          setIsAlarmRinging(false);\n        }, 5000);\n      }\n    });\n  };\n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = { time: formatAlarmTime(alarmTime), id: Date.now(), isActive: true };\n      setAlarms((prev) => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time}`);\n      setAlarmTime('');\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage('');\n      }, 3000);\n\n      // Hide the form after setting the alarm\n      setShowForm(false);\n    } else {\n      setAlarmMessage('Please enter a valid time');\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(':');\n    const date = new Date();\n    date.setHours(hours);\n    date.setMinutes(minutes);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true,\n    });\n  };\n\n  const calculateRemainingTime = (alarm) => {\n    const [alarmHours, alarmMinutes] = alarm.time.split(':').map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n\n    if (alarmDate <= now) {\n      alarmDate.setDate(alarmDate.getDate() + 1); // Set for next day if the time has passed\n    }\n\n    const diff = alarmDate.getTime() - now.getTime();\n\n    if (diff < 0) {\n      return \"Alarm time is invalid\"; // Check if the difference is negative\n    }\n\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n\n    return `Alarm in ${hours}h ${minutes}m ${seconds}s`; // Format the remaining time\n  };\n\n  const toggleAlarm = (id) => {\n    setAlarms((prev) =>\n      prev.map((alarm) =>\n        alarm.id === id ? { ...alarm, isActive: !alarm.isActive } : alarm\n      )\n    );\n  };\n\n  // Handle the click on the SVG to show the form\n  const handleSvgClick = () => {\n    setShowForm(true); // Show the form every time the SVG is clicked\n  };\n\n  return (\n    <div className=\"container\">\n      {alarmMessage && <div className=\"notification\">{alarmMessage}</div>}\n      <h2>Alarm Clock</h2>\n      <div className=\"timeDisplay\">\n        <h3>{currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true })}</h3>\n\n        {/* Always show SVG */}\n        <div onClick={handleSvgClick} style={{ cursor: 'pointer' }}>\n          <svg width=\"50px\" height=\"50px\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g>\n            <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\n            <g id=\"SVGRepo_iconCarrier\">\n              <path d=\"M11 8C11 7.44772 11.4477 7 12 7C12.5523 7 13 7.44772 13 8V11H16C16.5523 11 17 11.4477 17 12C17 12.5523 16.5523 13 16 13H13V16C13 16.5523 12.5523 17 12 17C11.4477 17 11 16.5523 11 16V13H8C7.44771 13 7 12.5523 7 12C7 11.4477 7.44772 11 8 11H11V8Z\" fill=\"#0F0F0F\"></path>\n              <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12ZM3.00683 12C3.00683 16.9668 7.03321 20.9932 12 20.9932C16.9668 20.9932 20.9932 16.9668 20.9932 12C20.9932 7.03321 16.9668 3.00683 12 3.00683C7.03321 3.00683 3.00683 7.03321 3.00683 12Z\" fill=\"#0F0F0F\"></path>\n            </g>\n          </svg>\n        </div>\n\n        {/* Show alarm form only if the SVG is clicked */}\n        {showForm && (\n          <div>\n            <input\n              type=\"time\"\n              value={alarmTime}\n              onChange={(e) => setAlarmTime(e.target.value)}\n              className=\"input\"\n            />\n            <button onClick={handleSetAlarm} className=\"button\">\n              Set Alarm\n            </button>\n          </div>\n        )}\n\n        {alarms.length > 0 && (\n          <div>\n            <h4>Alarms Set:</h4>\n            <ul>\n              {alarms.map((alarm) => (\n                <li key={alarm.id}>\n                  {alarm.time} - {alarm.isActive ? calculateRemainingTime(alarm) : 'Alarm Disabled'}\n                  <label className=\"switch\" style={{ marginLeft: '10px' }}>\n                    <input\n                      type=\"checkbox\"\n                      checked={alarm.isActive}\n                      onChange={() => toggleAlarm(alarm.id)}\n                    />\n                    <span className={`slider ${alarm.isActive ? '' : 'round'}`}></span>\n                  </label>\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}