{"ast":null,"code":"var _jsxFileName = \"/Users/solomonrojer/Desktop/Patrick/Time-Management/src/component/Alarm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\n// import labeltag from \"./../img/label.svg\"\n// import sound from \"./../audio/reminder.mp3\"\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alarm = () => {\n  _s();\n  var _alarms$find;\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\"); // Notification message\n  const [showForm, setShowForm] = useState(false); // Control visibility of form\n  const [showCheckboxes, setShowCheckboxes] = useState(false); // Control checkbox display\n  const [selectedAlarms, setSelectedAlarms] = useState({}); // Track selected alarms for deletion\n  const [showDeleteButton, setShowDeleteButton] = useState(false); // New state for delete button visibility\n  const [showAlarmClock, setShowAlarmClock] = useState(false); // State to control visibility of the alarm clock\n  const [ringingAlarmId, setRingingAlarmId] = useState(null);\n  // const audio = new Audio(sound); // Create audio instance\n\n  const checkAlarms = now => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n      const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n      if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n        setRingingAlarmId(alarm.id);\n      }\n      if (alarmDate < now) {\n        alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n      }\n      const stopAlarm = () => {\n        setAlarms(prev => prev.map(alarm => alarm.id === ringingAlarmId ? {\n          ...alarm,\n          isActive: false\n        } : alarm));\n        setRingingAlarmId(null); // Reset the ringing alarm\n      };\n\n      // Check if the alarm should ring\n      if (now.getHours() === alarmHours && now.getMinutes() === alarmMinutes && alarm.isActive) {\n        // Alarm is ringing, disable it\n        // setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n        // return { ...alarm, isActive: false }; // Turn off the alarm after it rings\n      }\n      return alarm; // Return unchanged if the alarm shouldn't ring yet\n    }));\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [alarms, checkAlarms]); // Only depend on alarms\n\n  // Function to stop the alarm\n  const stopAlarm = () => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      if (alarm.id === ringingAlarmId) {\n        return {\n          ...alarm,\n          isActive: false\n        }; // Deactivate the ringing alarm\n      }\n      return alarm;\n    }));\n    setRingingAlarmId(null); // Clear the ringing alarm ID\n  };\n\n  // Function to snooze the alarm for 5 minutes\n  const snoozeAlarm = () => {\n    setAlarms(prevAlarms => prevAlarms.map(alarm => {\n      if (alarm.id === ringingAlarmId) {\n        const [hours, minutes] = alarm.time24.split(\":\").map(Number);\n        const snoozedTime = new Date();\n        snoozedTime.setHours(hours);\n        snoozedTime.setMinutes(minutes + 5);\n        const newTime24 = `${snoozedTime.getHours().toString().padStart(2, \"0\")}:${snoozedTime.getMinutes().toString().padStart(2, \"0\")}`;\n        return {\n          ...alarm,\n          time24: newTime24\n        };\n      }\n      return alarm;\n    }));\n    setRingingAlarmId(null);\n  };\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true\n      };\n      setAlarms(prev => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false); // Hide form after setting the alarm\n      setShowDeleteButton(true); // Show the delete button when an alarm is set\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n  const formatAlarmTime = time => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n  const calculateRemainingTime = alarm => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(now.getFullYear(), now.getMonth(), now.getDate(), alarmHours, alarmMinutes);\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n  const toggleAlarm = id => {\n    setAlarms(prev => prev.map(alarm => {\n      if (alarm.id === id) {\n        const updatedAlarm = {\n          ...alarm,\n          isActive: !alarm.isActive\n        };\n        setAlarmMessage(updatedAlarm.isActive ? `Alarm re-enabled for ${updatedAlarm.time12}` : `Alarm disabled for ${updatedAlarm.time12}`);\n        return updatedAlarm;\n      }\n      return alarm; // Return unchanged if it's not the selected alarm\n    }));\n\n    // Clear the alarm message after 3 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n  const toggleCheckbox = id => {\n    setSelectedAlarms(prev => ({\n      ...prev,\n      [id]: !prev[id] // Toggle the selected state for the alarm\n    }));\n  };\n  const deleteSelectedAlarms = () => {\n    const deletedAlarms = alarms.filter(alarm => selectedAlarms[alarm.id]);\n    setAlarms(prev => prev.filter(alarm => !selectedAlarms[alarm.id])); // Delete selected alarms\n    setSelectedAlarms({}); // Clear selected alarms\n    setShowCheckboxes(false); // Hide checkboxes\n\n    if (deletedAlarms.length > 0) {\n      setAlarmMessage(`Deleted ${deletedAlarms.length} selected alarm(s).`);\n    } else {\n      setAlarmMessage(\"No alarms were selected for deletion.\");\n    }\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n  const handleDeleteClick = () => {\n    if (alarms.length === 0) {\n      setAlarmMessage(\"No alarms were set for deletion.\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else if (showCheckboxes) {\n      deleteSelectedAlarms();\n    } else {\n      setShowCheckboxes(true);\n    }\n  };\n  const sortedAlarms = [...alarms].sort((a, b) => calculateRemainingTime(a) - calculateRemainingTime(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [alarmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: alarmMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 24\n    }, this), ringingAlarmId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Alarm ringing for \", (_alarms$find = alarms.find(alarm => alarm.id === ringingAlarmId)) === null || _alarms$find === void 0 ? void 0 : _alarms$find.time12, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopAlarm,\n        className: \"stop-button\",\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: snoozeAlarm,\n        className: \"snooze-button\",\n        children: \"Snooze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeDisplay\",\n      children: [showAlarmClock && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: currentTime.toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            second: \"2-digit\",\n            hour12: true\n          }).split(\" \").map((part, index) => index === 1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ampm\",\n            children: part\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time\",\n            children: part\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"10px\",\n            justifyContent: showForm || showDeleteButton && alarms.length > 0 ? \"space-between\" : \"center\"\n          },\n          children: [!showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setShowForm(prev => !prev); // Toggle the form visibility\n              setShowDeleteButton(false);\n            },\n            style: {\n              cursor: \"pointer\",\n              position: \"relative\"\n            },\n            title: \"Add Alarm\" // Tooltip for Add SVG\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: add,\n              alt: \"Add Alarm\",\n              width: \"50\",\n              height: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this), showDeleteButton && alarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleDeleteClick,\n            style: {\n              cursor: \"pointer\",\n              position: \"relative\"\n            },\n            title: \"Delete Selected Alarms\" // Tooltip for Delete SVG\n            ,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Delete,\n              alt: \"Delete Selected Alarms\",\n              width: \"50\",\n              height: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            value: alarmTime,\n            onChange: e => setAlarmTime(e.target.value),\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSetAlarm,\n            className: \"button\",\n            style: {\n              width: \"175px\",\n              height: \"46px\",\n              margin: \"20px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-around\"\n            },\n            children: \"Set Alarm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 15\n        }, this), sortedAlarms.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alarm-list\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: sortedAlarms.map(alarm => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"glassy-effect\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                margin: \"10px 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  flex: 1,\n                  textAlign: \"left\",\n                  padding: \"0px 100px 0px 0px\",\n                  color: \"white\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: \"1.5em\",\n                    display: \"flex\",\n                    alignItems: \"baseline\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: alarm.time12.split(\" \")[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 27\n                  }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"0.4em\",\n                      marginLeft: \"5px\"\n                    },\n                    children: alarm.time12.split(\" \")[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 27\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: \"0.6em\",\n                    marginTop: \"2px\"\n                  },\n                  children: alarm.isActive ? `Alarm in ${Math.floor(calculateRemainingTime(alarm) / (1000 * 60 * 60))}h ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60 * 60) / (1000 * 60))}m ${Math.floor(calculateRemainingTime(alarm) % (1000 * 60) / 1000)}s` : \"Alarm Disabled\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  alignItems: \"center\"\n                },\n                children: showCheckboxes ? /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"round-checkbox\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedAlarms[alarm.id] || false,\n                    onChange: () => toggleCheckbox(alarm.id),\n                    style: {\n                      display: \"none\"\n                    } // Hide the default checkbox\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"checkmark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 27\n                }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"switch\",\n                  style: {\n                    marginLeft: \"10px\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: alarm.isActive,\n                    onChange: () => toggleAlarm(alarm.id),\n                    style: {\n                      display: \"none\"\n                    } // Hide the default checkbox\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `slider ${alarm.isActive ? \"\" : \"round\"}`,\n                    style: {\n                      width: \"49px\",\n                      height: \"22px\"\n                    } // Adjust slider size\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 23\n              }, this)]\n            }, alarm.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !showAlarmClock && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setShowAlarmClock(true),\n        style: {\n          cursor: \"pointer\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: alarm,\n          alt: \"Alarm Clock\",\n          width: \"100\",\n          height: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(Alarm, \"VsLcyJT2g/QX9TKhu8MryD5axH0=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useState","useEffect","add","Delete","alarm","jsxDEV","_jsxDEV","Fragment","_Fragment","Alarm","_s","_alarms$find","alarmTime","setAlarmTime","alarms","setAlarms","currentTime","setCurrentTime","Date","alarmMessage","setAlarmMessage","showForm","setShowForm","showCheckboxes","setShowCheckboxes","selectedAlarms","setSelectedAlarms","showDeleteButton","setShowDeleteButton","showAlarmClock","setShowAlarmClock","ringingAlarmId","setRingingAlarmId","checkAlarms","now","prevAlarms","map","alarmHours","alarmMinutes","time24","split","Number","alarmDate","getFullYear","getMonth","getDate","getHours","getMinutes","isActive","id","setDate","stopAlarm","prev","setTimeout","interval","setInterval","clearInterval","snoozeAlarm","hours","minutes","snoozedTime","setHours","setMinutes","newTime24","toString","padStart","handleSetAlarm","newAlarm","time12","formatAlarmTime","time","ampm","formattedHours","calculateRemainingTime","getTime","toggleAlarm","updatedAlarm","toggleCheckbox","deleteSelectedAlarms","deletedAlarms","filter","length","handleDeleteClick","sortedAlarms","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","find","onClick","toLocaleTimeString","hour","minute","second","hour12","part","index","style","display","gap","justifyContent","cursor","position","title","src","alt","width","height","type","value","onChange","e","target","margin","alignItems","flex","textAlign","padding","color","fontSize","marginLeft","marginTop","Math","floor","checked","_c","$RefreshReg$"],"sources":["/Users/solomonrojer/Desktop/Patrick/Time-Management/src/component/Alarm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./../style/alarm.css\"; // Ensure your CSS file is correctly linked\nimport add from \"./../img/add.svg\"; // Import your new SVG\nimport Delete from \"./../img/delete.svg\"; // Import your delete SVG\nimport alarm from \"./../img/alarm-plus-svgrepo-com.svg\"; // Import your alarm SVG\n// import labeltag from \"./../img/label.svg\"\n// import sound from \"./../audio/reminder.mp3\"\n\nconst Alarm = () => {\n  const [alarmTime, setAlarmTime] = useState(\"\");\n  const [alarms, setAlarms] = useState([]); // Array to hold all alarms\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [alarmMessage, setAlarmMessage] = useState(\"\"); // Notification message\n  const [showForm, setShowForm] = useState(false); // Control visibility of form\n  const [showCheckboxes, setShowCheckboxes] = useState(false); // Control checkbox display\n  const [selectedAlarms, setSelectedAlarms] = useState({}); // Track selected alarms for deletion\n  const [showDeleteButton, setShowDeleteButton] = useState(false); // New state for delete button visibility\n  const [showAlarmClock, setShowAlarmClock] = useState(false); // State to control visibility of the alarm clock\n  const [ringingAlarmId, setRingingAlarmId] = useState(null); \n  // const audio = new Audio(sound); // Create audio instance\n\nconst checkAlarms = (now) => {\n    setAlarms((prevAlarms) =>\n      prevAlarms.map((alarm) => {\n        const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n        const alarmDate = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate(),\n          alarmHours,\n          alarmMinutes\n        );\n  \n        if (\n          now.getHours() === alarmHours &&\n          now.getMinutes() === alarmMinutes &&\n          alarm.isActive\n        ) {\n          setRingingAlarmId(alarm.id);\n        }\n\n        if (alarmDate < now) {\n          alarmDate.setDate(alarmDate.getDate() + 1); // Set for the next day if time has passed\n        }\n\n        const stopAlarm = () => {\n          setAlarms((prev) =>\n            prev.map((alarm) =>\n              alarm.id === ringingAlarmId ? { ...alarm, isActive: false } : alarm\n            )\n          );\n          setRingingAlarmId(null); // Reset the ringing alarm\n        };\n\n        // Check if the alarm should ring\n        if (\n          now.getHours() === alarmHours &&\n          now.getMinutes() === alarmMinutes &&\n          alarm.isActive\n        ) {\n          // Alarm is ringing, disable it\n          // setAlarmMessage(`Alarm ringing for ${alarm.time12}!`);\n          // return { ...alarm, isActive: false }; // Turn off the alarm after it rings\n        }\n\n        return alarm; // Return unchanged if the alarm shouldn't ring yet\n      })\n    );\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      checkAlarms(now); // Pass current time to check alarms\n    }, 1000);\n\n    return () => clearInterval(interval);\n  }, [alarms,checkAlarms]); // Only depend on alarms\n\n  // Function to stop the alarm\nconst stopAlarm = () => {\n  setAlarms((prevAlarms) =>\n    prevAlarms.map((alarm) => {\n      if (alarm.id === ringingAlarmId) {\n        return { ...alarm, isActive: false }; // Deactivate the ringing alarm\n      }\n      return alarm;\n    })\n  );\n  setRingingAlarmId(null); // Clear the ringing alarm ID\n};\n\n// Function to snooze the alarm for 5 minutes\nconst snoozeAlarm = () => {\n  setAlarms((prevAlarms) =>\n    prevAlarms.map((alarm) => {\n      if (alarm.id === ringingAlarmId) {\n        const [hours, minutes] = alarm.time24.split(\":\").map(Number);\n        const snoozedTime = new Date();\n        snoozedTime.setHours(hours);\n        snoozedTime.setMinutes(minutes + 5);\n        const newTime24 = `${snoozedTime.getHours().toString().padStart(2, \"0\")}:${snoozedTime.getMinutes().toString().padStart(2, \"0\")}`;\n        return { ...alarm, time24: newTime24 };\n      }\n      return alarm;\n    })\n  );\n  setRingingAlarmId(null);\n};\n\n  \n\n  const handleSetAlarm = () => {\n    if (alarmTime) {\n      const newAlarm = {\n        time24: alarmTime,\n        time12: formatAlarmTime(alarmTime),\n        id: Date.now(),\n        isActive: true,\n      };\n      setAlarms((prev) => [...prev, newAlarm]);\n      setAlarmMessage(`Alarm set for ${newAlarm.time12}`);\n      setAlarmTime(\"\");\n      setShowForm(false); // Hide form after setting the alarm\n      setShowDeleteButton(true); // Show the delete button when an alarm is set\n\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else {\n      setAlarmMessage(\"Please enter a valid time\");\n      // Clear the alarm message after 3 seconds\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    }\n  };\n\n  const formatAlarmTime = (time) => {\n    const [hours, minutes] = time.split(\":\").map(Number);\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\n    const formattedHours = hours % 12 || 12;\n    return `${formattedHours}:${minutes < 10 ? \"0\" + minutes : minutes} ${ampm}`;\n  };\n\n  const calculateRemainingTime = (alarm) => {\n    const [alarmHours, alarmMinutes] = alarm.time24.split(\":\").map(Number);\n    const now = new Date();\n    const alarmDate = new Date(\n      now.getFullYear(),\n      now.getMonth(),\n      now.getDate(),\n      alarmHours,\n      alarmMinutes\n    );\n\n    if (alarmDate < now) {\n      alarmDate.setDate(alarmDate.getDate() + 1);\n    }\n\n    return alarmDate.getTime() - now.getTime(); // Return the difference in milliseconds\n  };\n\n  const toggleAlarm = (id) => {\n    setAlarms((prev) =>\n      prev.map((alarm) => {\n        if (alarm.id === id) {\n          const updatedAlarm = { ...alarm, isActive: !alarm.isActive };\n          setAlarmMessage(\n            updatedAlarm.isActive\n              ? `Alarm re-enabled for ${updatedAlarm.time12}`\n              : `Alarm disabled for ${updatedAlarm.time12}`\n          );\n          return updatedAlarm;\n        }\n        return alarm; // Return unchanged if it's not the selected alarm\n      })\n    );\n\n    // Clear the alarm message after 3 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 3000);\n  };\n\n  const toggleCheckbox = (id) => {\n    setSelectedAlarms((prev) => ({\n      ...prev,\n      [id]: !prev[id], // Toggle the selected state for the alarm\n    }));\n  };\n\n  const deleteSelectedAlarms = () => {\n    const deletedAlarms = alarms.filter((alarm) => selectedAlarms[alarm.id]);\n    setAlarms((prev) => prev.filter((alarm) => !selectedAlarms[alarm.id])); // Delete selected alarms\n    setSelectedAlarms({}); // Clear selected alarms\n    setShowCheckboxes(false); // Hide checkboxes\n\n    if (deletedAlarms.length > 0) {\n      setAlarmMessage(`Deleted ${deletedAlarms.length} selected alarm(s).`);\n    } else {\n      setAlarmMessage(\"No alarms were selected for deletion.\");\n    }\n\n    // Clear the alarm message after 5 seconds\n    setTimeout(() => {\n      setAlarmMessage(\"\");\n    }, 5000);\n  };\n\n  const handleDeleteClick = () => {\n    if (alarms.length === 0) {\n      setAlarmMessage(\"No alarms were set for deletion.\");\n      setTimeout(() => {\n        setAlarmMessage(\"\");\n      }, 3000);\n    } else if (showCheckboxes) {\n      deleteSelectedAlarms();\n    } else {\n      setShowCheckboxes(true);\n    }\n  };\n\n  const sortedAlarms = [...alarms].sort(\n    (a, b) => calculateRemainingTime(a) - calculateRemainingTime(b)\n  );\n\n  return (\n    <div className=\"container\">\n      {alarmMessage && <div className=\"notification\">{alarmMessage}</div>}\n\n      {ringingAlarmId && (\n    <div className=\"notification\">\n        <p>Alarm ringing for {alarms.find(alarm => alarm.id === ringingAlarmId)?.time12}!</p>\n        <button onClick={stopAlarm} className=\"stop-button\">Stop</button>\n        <button onClick={snoozeAlarm} className=\"snooze-button\">Snooze</button>\n    </div>\n)}\n\n      <div className=\"timeDisplay\">\n        {showAlarmClock && (\n          <>\n            <h4>\n              {currentTime\n                .toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                  second: \"2-digit\",\n                  hour12: true,\n                })\n                .split(\" \")\n                .map((part, index) =>\n                  index === 1 ? (\n                    <span key={index} className=\"ampm\">\n                      {part}\n                    </span>\n                  ) : (\n                    <span key={index} className=\"time\">\n                      {part}\n                    </span>\n                  )\n                )}\n            </h4>\n            <div\n              style={{\n                display: \"flex\",\n                gap: \"10px\",\n                justifyContent: showForm || (showDeleteButton && alarms.length > 0) ? \"space-between\" : \"center\",\n              }}\n            >\n              {/* Show Add Alarm SVG if the time picker is not showing */}\n              {!showForm && (\n                <div\n                  onClick={() => {\n                    setShowForm((prev) => !prev); // Toggle the form visibility\n                    setShowDeleteButton(false);\n                  }}\n                  style={{ cursor: \"pointer\", position: \"relative\" }}\n                  title=\"Add Alarm\" // Tooltip for Add SVG\n                >\n                  <img src={add} alt=\"Add Alarm\" width=\"50\" height=\"50\" />\n                </div>\n              )}\n\n              {/* Show Delete button only if there are alarms and showDeleteButton is true */}\n              {showDeleteButton && alarms.length > 0 && (\n                <div\n                  onClick={handleDeleteClick}\n                  style={{ cursor: \"pointer\", position: \"relative\" }}\n                  title=\"Delete Selected Alarms\" // Tooltip for Delete SVG\n                >\n                  <img\n                    src={Delete}\n                    alt=\"Delete Selected Alarms\"\n                    width=\"50\"\n                    height=\"50\"\n                  />\n                </div>\n              )}\n            </div>\n            {showForm && (\n              <div className=\"button-container\">\n                <input\n                  type=\"time\"\n                  value={alarmTime}\n                  onChange={(e) => setAlarmTime(e.target.value)}\n                  className=\"input\"\n                />\n                <button\n                  onClick={handleSetAlarm}\n                  className=\"button\"\n                  style={{\n                    width: \"175px\",\n                    height: \"46px\",\n                    margin: \"20px\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"space-around\",\n                  }}\n                >\n                  Set Alarm\n                </button>\n              </div>\n            )}\n            {sortedAlarms.length > 0 && (\n              <div className=\"alarm-list\">\n                <ul>\n                  {sortedAlarms.map((alarm) => (\n                    <li\n                      key={alarm.id}\n                      className=\"glassy-effect\"\n                      style={{\n                        display: \"flex\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        margin: \"10px 0\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          flex: 1,\n                          textAlign: \"left\",\n                          padding: \"0px 100px 0px 0px\",\n                          color: \"white\"\n                        }}\n                      >\n                        <div\n                          style={{\n                            fontSize: \"1.5em\",\n                            display: \"flex\",\n                            alignItems: \"baseline\",\n                          }}\n                        >\n                          <span>{alarm.time12.split(\" \")[0]}</span>{\" \"}\n                          <span style={{ fontSize: \"0.4em\", marginLeft: \"5px\" }}>\n                            {alarm.time12.split(\" \")[1]}\n                          </span>{\" \"}\n                        </div>\n                        <div style={{ fontSize: \"0.6em\", marginTop: \"2px\" }}>\n                          {alarm.isActive\n                            ? `Alarm in ${Math.floor(\n                              calculateRemainingTime(alarm) / (1000 * 60 * 60)\n                            )}h ${Math.floor(\n                              (calculateRemainingTime(alarm) % (1000 * 60 * 60)) /\n                              (1000 * 60)\n                            )}m ${Math.floor(\n                              (calculateRemainingTime(alarm) % (1000 * 60)) / 1000\n                            )}s`\n                            : \"Alarm Disabled\"}\n                        </div>\n                      </div>\n                      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                        {showCheckboxes ? (\n                          <label className=\"round-checkbox\">\n                            <input\n                              type=\"checkbox\"\n                              checked={selectedAlarms[alarm.id] || false}\n                              onChange={() => toggleCheckbox(alarm.id)}\n                              style={{ display: \"none\" }} // Hide the default checkbox\n                            />\n                            <span className=\"checkmark\"></span>\n                          </label>\n                        ) : (\n                          <label className=\"switch\" style={{ marginLeft: \"10px\" }}>\n                            <input\n                              type=\"checkbox\"\n                              checked={alarm.isActive}\n                              onChange={() => toggleAlarm(alarm.id)}\n                              style={{ display: \"none\" }} // Hide the default checkbox\n                            />\n                            <span\n                              className={`slider ${alarm.isActive ? \"\" : \"round\"}`}\n                              style={{ width: \"49px\", height: \"22px\" }} // Adjust slider size\n                            ></span>\n                          </label>\n                        )}\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </>\n        )}\n\n        {/* Show only the alarm SVG initially */}\n        {!showAlarmClock && (\n          <div\n            onClick={() => setShowAlarmClock(true)}\n            style={{ cursor: \"pointer\", display: \"flex\", justifyContent: \"center\", marginTop: \"20px\" }}\n          >\n            <img src={alarm} alt=\"Alarm Clock\" width=\"100\" height=\"100\" />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Alarm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}